(set-logic QF_NRA)
(declare-fun p0 () Real)
(declare-fun p1 () Real)
(declare-fun p2 () Real)
(declare-fun p3 () Real)
(declare-fun p4 () Real)
(declare-fun p5 () Real)
(declare-fun p6 () Real)
(declare-fun p7 () Real)
(declare-fun p8 () Real)
(declare-fun p9 () Real)
(declare-fun p10 () Real)
(declare-fun p11 () Real)
(declare-fun p12 () Real)
(declare-fun p13 () Real)
(declare-fun p14 () Real)
(declare-fun p15 () Real)
(declare-fun battery_charge_rate_fly () Real)
(declare-fun battery_charge_rate_hover () Real)
(declare-fun battery_charging_rate () Real)
(declare-fun drone_velocity () Real)
(declare-fun queue_data_rate () Real)
(declare-fun queue_upload_rate () Real)
(declare-fun s0_loc () Real)
(declare-fun s1_loc () Real)
(declare-fun s2_loc () Real)
(define-fun norm ((a Real)) Real
  (ite (< a 0) (* -1 a) a))
(assert (= battery_charge_rate_fly -1.0))
(assert (= battery_charge_rate_hover -1.0))
(assert (= battery_charging_rate 50.0))
(assert (= drone_velocity 10.0))
(assert (= queue_data_rate 1.0))
(assert (= queue_upload_rate 50.0))
(assert (= s0_loc 10.0))
(assert (= s1_loc 10.0))
(assert (= s2_loc 10.0))
(assert (>= p0 0.0))
(assert (<= p0 100.0))
(assert (>= p1 0.0))
(assert (<= p1 100.0))
(assert (>= p2 0.0))
(assert (<= p2 100.0))
(assert (>= p3 0.0))
(assert (<= p3 100.0))
(assert (>= p4 0.0))
(assert (<= p4 100.0))
(assert (>= p5 0.0))
(assert (<= p5 100.0))
(assert (>= p6 0.0))
(assert (<= p6 100.0))
(assert (>= p7 0.0))
(assert (<= p7 100.0))
(assert (>= p8 0.0))
(assert (<= p8 100.0))
(assert (>= p9 0.0))
(assert (<= p9 100.0))
(assert (>= p10 0.0))
(assert (<= p10 100.0))
(assert (>= p11 0.0))
(assert (<= p11 100.0))
(assert (>= p12 0.0))
(assert (<= p12 100.0))
(assert (>= p13 0.0))
(assert (<= p13 100.0))
(assert (>= p14 0.0))
(assert (<= p14 100.0))
(assert (>= p15 0.0))
(assert (<= p15 100.0))

(assert (> (+ (norm (- p0 60.0)) (+ (norm (- p1 4.0)) (+ (norm (- p2 1.220703125e-4)) (+ (norm (- p3 0.0)) (+ (norm (- p4 97.0)) (+ (norm (- p5 5.0)) (+ (norm (- p6 0.0)) (+ (norm (- p7 3.90625e-3)) (+ (norm (- p8 1.0)) (+ (norm (- p9 10.0)) (+ (norm (- p10 0.0)) (+ (norm (- p11 0.0)) (+ (norm (- p12 1.0)) (+ (norm (- p13 1.0)) (+ (norm (- p14 1.0016765801409975)) (norm (- p15 99.91796875))))))))))))))))) 1))
(declare-fun x0_17 () Real)
(declare-fun x1_17 () Real)
(declare-fun x2_17 () Real)
(declare-fun x3_17 () Real)
(declare-fun bi_17 () Real)
(declare-fun b0_17 () Real)
(declare-fun b1_17 () Real)
(declare-fun b2_17 () Real)
(declare-fun b3_17 () Real)
(declare-fun s0_qi_17 () Real)
(declare-fun s0_q0_17 () Real)
(declare-fun s0_q1_17 () Real)
(declare-fun s0_q2_17 () Real)
(declare-fun s0_q3_17 () Real)
(declare-fun s1_qi_17 () Real)
(declare-fun s1_q0_17 () Real)
(declare-fun s1_q1_17 () Real)
(declare-fun s1_q2_17 () Real)
(declare-fun s1_q3_17 () Real)
(declare-fun s2_qi_17 () Real)
(declare-fun s2_q0_17 () Real)
(declare-fun s2_q1_17 () Real)
(declare-fun s2_q2_17 () Real)
(declare-fun s2_q3_17 () Real)
(declare-fun t0_17 () Real)
(declare-fun t1_17 () Real)
(declare-fun t2_17 () Real)
(declare-fun t3_17 () Real)
(declare-fun bc_17 () Real)
(declare-fun s0_qc_17 () Real)
(declare-fun s1_qc_17 () Real)
(declare-fun s2_qc_17 () Real)
(assert (>= t0_17 0.0))
(assert (>= t1_17 0.0))
(assert (>= t2_17 0.0))
(assert (>= t3_17 0.0))
(assert (<= bi_17 100.0))
(assert (<= b0_17 100.0))
(assert (<= b1_17 100.0))
(assert (<= b2_17 100.0))
(assert (<= b3_17 100.0))
(assert (>= s0_qi_17 0.0))
(assert (>= s0_q0_17 0.0))
(assert (>= s0_q1_17 0.0))
(assert (>= s0_q2_17 0.0))
(assert (>= s0_q3_17 0.0))
(assert (>= s1_qi_17 0.0))
(assert (>= s1_q0_17 0.0))
(assert (>= s1_q1_17 0.0))
(assert (>= s1_q2_17 0.0))
(assert (>= s1_q3_17 0.0))
(assert (>= s2_qi_17 0.0))
(assert (>= s2_q0_17 0.0))
(assert (>= s2_q1_17 0.0))
(assert (>= s2_q2_17 0.0))
(assert (>= s2_q3_17 0.0))
(assert (<= s0_qi_17 100.0))
(assert (<= s1_qi_17 100.0))
(declare-fun choice_17 () Real)
(assert (or (= choice_17 0.0) (= choice_17 1.0) (= choice_17 2.0)))


;charging
(assert (= x0_17 0))
(assert (= b0_17 (+ bi_17 (* battery_charging_rate t0_17))))
(assert (= s0_q0_17 (+ s0_qi_17 (* queue_data_rate t0_17))))
(assert (= s1_q0_17 (+ s1_qi_17 (* queue_data_rate t0_17))))
(assert (= s2_q0_17 (+ s2_qi_17 (* queue_data_rate t0_17))))
(assert (and (=> (>= bi_17 p15) (= b0_17 bi_17)) (=> (< bi_17 p15) (= b0_17 p15))))
(assert (=> (and (and (and (>= bi_17 p0) (<= s0_qi_17 p1)) (<= (+ s1_qi_17 p2) s0_qi_17)) (<= (+ s2_qi_17 p3) s0_qi_17)) (= choice_17 0.0)))
(assert (=> (and (not (and (and (and (>= bi_17 p0) (<= s0_qi_17 p1)) (<= (+ s1_qi_17 p2) s0_qi_17)) (<= (+ s2_qi_17 p3) s0_qi_17))) (and (and (and (>= bi_17 p4) (<= s1_qi_17 p5)) (<= (+ s0_qi_17 p6) s1_qi_17)) (<= (+ s2_qi_17 p7) s1_qi_17))) (= choice_17 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_17 p0) (<= s0_qi_17 p1)) (<= (+ s1_qi_17 p2) s0_qi_17)) (<= (+ s2_qi_17 p3) s0_qi_17))) (not (and (and (and (>= bi_17 p4) (<= s1_qi_17 p5)) (<= (+ s0_qi_17 p6) s1_qi_17)) (<= (+ s2_qi_17 p7) s1_qi_17)))) (and (and (and (>= bi_17 p8) (<= s2_qi_17 p9)) (<= (+ s1_qi_17 p10) s2_qi_17)) (<= (+ s0_qi_17 p11) s2_qi_17))) (= choice_17 2.0)))


;flying to sensors
(assert (=> (= choice_17 0.0) (= x1_17 s0_loc)))
(assert (=> (= choice_17 1.0) (= x1_17 s1_loc)))
(assert (=> (= choice_17 2.0) (= x1_17 s2_loc)))
(assert (= x1_17 (+ x0_17 (* drone_velocity t1_17))))
(assert (= b1_17 (+ b0_17 (* battery_charge_rate_fly t1_17))))
(assert (= s0_q1_17 (+ s0_q0_17 (* queue_data_rate t1_17))))
(assert (= s1_q1_17 (+ s1_q0_17 (* queue_data_rate t1_17))))
(assert (= s2_q1_17 (+ s2_q0_17 (* queue_data_rate t1_17))))


;Collecting data
(assert (= x2_17 x1_17))
(assert (= b2_17 (+ b1_17 (* battery_charge_rate_hover t2_17))))
(assert (=> (= choice_17 0.0) (and (= s0_q2_17 (- s0_q1_17 (* queue_upload_rate t2_17))) (= s1_q2_17 (+ s1_q1_17 (* queue_data_rate t2_17))) (= s2_q2_17 (+ s2_q1_17 (* queue_data_rate t2_17))))))
(assert (=> (= choice_17 1.0) (and (= s1_q2_17 (- s1_q1_17 (* queue_upload_rate t2_17))) (= s0_q2_17 (+ s0_q1_17 (* queue_data_rate t2_17))) (= s2_q2_17 (+ s2_q1_17 (* queue_data_rate t2_17))))))
(assert (=> (= choice_17 2.0) (and (= s2_q2_17 (- s2_q1_17 (* queue_upload_rate t2_17))) (= s0_q2_17 (+ s0_q1_17 (* queue_data_rate t2_17))) (= s1_q2_17 (+ s1_q1_17 (* queue_data_rate t2_17))))))
(assert (=> (= choice_17 0.0) (and (=> (<= s0_q1_17 p12) (= s0_q2_17 s0_q1_17)) (=> (> s0_q1_17 p12) (= s0_q2_17 p12)))))
(assert (=> (= choice_17 1.0) (and (=> (<= s1_q1_17 p13) (= s1_q2_17 s1_q1_17)) (=> (> s1_q1_17 p13) (= s1_q2_17 p13)))))
(assert (=> (= choice_17 2.0) (and (=> (<= s2_q1_17 p14) (= s2_q2_17 s2_q1_17)) (=> (> s2_q1_17 p14) (= s2_q2_17 p14)))))


;flying back
(assert (= x3_17 0))
(assert (= x3_17 (+ x2_17 (- (* drone_velocity t3_17)))))
(assert (= b3_17 (+ b2_17 (* battery_charge_rate_fly t3_17))))
(assert (= s0_q3_17 (+ s0_q2_17 (* queue_data_rate t3_17))))
(assert (= s1_q3_17 (+ s1_q2_17 (* queue_data_rate t3_17))))
(assert (= s2_q3_17 (+ s2_q2_17 (* queue_data_rate t3_17))))

(assert (and (= bc_17 99.91796875) (= s0_qc_17 0.0) (= s1_qc_17 0.001676580140997252) (= s2_qc_17 0.001676580140997475)))

(assert (and (= bi_17 bc_17) (= s0_qi_17 s0_qc_17) (= s1_qi_17 s1_qc_17) (= s2_qi_17 s2_qc_17)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_17 p0) (<= s0_qi_17 p1)) (<= (+ s1_qi_17 p2) s0_qi_17)) (<= (+ s2_qi_17 p3) s0_qi_17)) (and (and (and (>= bi_17 p4) (<= s1_qi_17 p5)) (<= (+ s0_qi_17 p6) s1_qi_17)) (<= (+ s2_qi_17 p7) s1_qi_17))) (and (and (and (>= bi_17 p8) (<= s2_qi_17 p9)) (<= (+ s1_qi_17 p10) s2_qi_17)) (<= (+ s0_qi_17 p11) s2_qi_17)))(and (and (> b0_17 0.0) (> b1_17 0.0) (> b2_17 0.0) (> b3_17 0.0) (< s0_q0_17 100.0) (< s0_q1_17 100.0) (< s0_q2_17 100.0) (< s0_q3_17 100.0) (< s1_q0_17 100.0) (< s1_q1_17 100.0) (< s1_q2_17 100.0) (< s1_q3_17 100.0) (< s2_q0_17 100.0) (< s2_q1_17 100.0) (< s2_q2_17 100.0) (< s2_q3_17 100.0))(or (or (and (and (and (>= b3_17 p0) (<= s0_q3_17 p1)) (<= (+ s1_q3_17 p2) s0_q3_17)) (<= (+ s2_q3_17 p3) s0_q3_17)) (and (and (and (>= b3_17 p4) (<= s1_q3_17 p5)) (<= (+ s0_q3_17 p6) s1_q3_17)) (<= (+ s2_q3_17 p7) s1_q3_17))) (and (and (and (>= b3_17 p8) (<= s2_q3_17 p9)) (<= (+ s1_q3_17 p10) s2_q3_17)) (<= (+ s0_q3_17 p11) s2_q3_17))))))

(declare-fun x0_16 () Real)
(declare-fun x1_16 () Real)
(declare-fun x2_16 () Real)
(declare-fun x3_16 () Real)
(declare-fun bi_16 () Real)
(declare-fun b0_16 () Real)
(declare-fun b1_16 () Real)
(declare-fun b2_16 () Real)
(declare-fun b3_16 () Real)
(declare-fun s0_qi_16 () Real)
(declare-fun s0_q0_16 () Real)
(declare-fun s0_q1_16 () Real)
(declare-fun s0_q2_16 () Real)
(declare-fun s0_q3_16 () Real)
(declare-fun s1_qi_16 () Real)
(declare-fun s1_q0_16 () Real)
(declare-fun s1_q1_16 () Real)
(declare-fun s1_q2_16 () Real)
(declare-fun s1_q3_16 () Real)
(declare-fun s2_qi_16 () Real)
(declare-fun s2_q0_16 () Real)
(declare-fun s2_q1_16 () Real)
(declare-fun s2_q2_16 () Real)
(declare-fun s2_q3_16 () Real)
(declare-fun t0_16 () Real)
(declare-fun t1_16 () Real)
(declare-fun t2_16 () Real)
(declare-fun t3_16 () Real)
(declare-fun bc_16 () Real)
(declare-fun s0_qc_16 () Real)
(declare-fun s1_qc_16 () Real)
(declare-fun s2_qc_16 () Real)
(assert (>= t0_16 0.0))
(assert (>= t1_16 0.0))
(assert (>= t2_16 0.0))
(assert (>= t3_16 0.0))
(assert (<= bi_16 100.0))
(assert (<= b0_16 100.0))
(assert (<= b1_16 100.0))
(assert (<= b2_16 100.0))
(assert (<= b3_16 100.0))
(assert (>= s0_qi_16 0.0))
(assert (>= s0_q0_16 0.0))
(assert (>= s0_q1_16 0.0))
(assert (>= s0_q2_16 0.0))
(assert (>= s0_q3_16 0.0))
(assert (>= s1_qi_16 0.0))
(assert (>= s1_q0_16 0.0))
(assert (>= s1_q1_16 0.0))
(assert (>= s1_q2_16 0.0))
(assert (>= s1_q3_16 0.0))
(assert (>= s2_qi_16 0.0))
(assert (>= s2_q0_16 0.0))
(assert (>= s2_q1_16 0.0))
(assert (>= s2_q2_16 0.0))
(assert (>= s2_q3_16 0.0))
(assert (<= s0_qi_16 100.0))
(assert (<= s1_qi_16 100.0))
(declare-fun choice_16 () Real)
(assert (or (= choice_16 0.0) (= choice_16 1.0) (= choice_16 2.0)))


;charging
(assert (= x0_16 0))
(assert (= b0_16 (+ bi_16 (* battery_charging_rate t0_16))))
(assert (= s0_q0_16 (+ s0_qi_16 (* queue_data_rate t0_16))))
(assert (= s1_q0_16 (+ s1_qi_16 (* queue_data_rate t0_16))))
(assert (= s2_q0_16 (+ s2_qi_16 (* queue_data_rate t0_16))))
(assert (and (=> (>= bi_16 p15) (= b0_16 bi_16)) (=> (< bi_16 p15) (= b0_16 p15))))
(assert (=> (and (and (and (>= bi_16 p0) (<= s0_qi_16 p1)) (<= (+ s1_qi_16 p2) s0_qi_16)) (<= (+ s2_qi_16 p3) s0_qi_16)) (= choice_16 0.0)))
(assert (=> (and (not (and (and (and (>= bi_16 p0) (<= s0_qi_16 p1)) (<= (+ s1_qi_16 p2) s0_qi_16)) (<= (+ s2_qi_16 p3) s0_qi_16))) (and (and (and (>= bi_16 p4) (<= s1_qi_16 p5)) (<= (+ s0_qi_16 p6) s1_qi_16)) (<= (+ s2_qi_16 p7) s1_qi_16))) (= choice_16 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_16 p0) (<= s0_qi_16 p1)) (<= (+ s1_qi_16 p2) s0_qi_16)) (<= (+ s2_qi_16 p3) s0_qi_16))) (not (and (and (and (>= bi_16 p4) (<= s1_qi_16 p5)) (<= (+ s0_qi_16 p6) s1_qi_16)) (<= (+ s2_qi_16 p7) s1_qi_16)))) (and (and (and (>= bi_16 p8) (<= s2_qi_16 p9)) (<= (+ s1_qi_16 p10) s2_qi_16)) (<= (+ s0_qi_16 p11) s2_qi_16))) (= choice_16 2.0)))


;flying to sensors
(assert (=> (= choice_16 0.0) (= x1_16 s0_loc)))
(assert (=> (= choice_16 1.0) (= x1_16 s1_loc)))
(assert (=> (= choice_16 2.0) (= x1_16 s2_loc)))
(assert (= x1_16 (+ x0_16 (* drone_velocity t1_16))))
(assert (= b1_16 (+ b0_16 (* battery_charge_rate_fly t1_16))))
(assert (= s0_q1_16 (+ s0_q0_16 (* queue_data_rate t1_16))))
(assert (= s1_q1_16 (+ s1_q0_16 (* queue_data_rate t1_16))))
(assert (= s2_q1_16 (+ s2_q0_16 (* queue_data_rate t1_16))))


;Collecting data
(assert (= x2_16 x1_16))
(assert (= b2_16 (+ b1_16 (* battery_charge_rate_hover t2_16))))
(assert (=> (= choice_16 0.0) (and (= s0_q2_16 (- s0_q1_16 (* queue_upload_rate t2_16))) (= s1_q2_16 (+ s1_q1_16 (* queue_data_rate t2_16))) (= s2_q2_16 (+ s2_q1_16 (* queue_data_rate t2_16))))))
(assert (=> (= choice_16 1.0) (and (= s1_q2_16 (- s1_q1_16 (* queue_upload_rate t2_16))) (= s0_q2_16 (+ s0_q1_16 (* queue_data_rate t2_16))) (= s2_q2_16 (+ s2_q1_16 (* queue_data_rate t2_16))))))
(assert (=> (= choice_16 2.0) (and (= s2_q2_16 (- s2_q1_16 (* queue_upload_rate t2_16))) (= s0_q2_16 (+ s0_q1_16 (* queue_data_rate t2_16))) (= s1_q2_16 (+ s1_q1_16 (* queue_data_rate t2_16))))))
(assert (=> (= choice_16 0.0) (and (=> (<= s0_q1_16 p12) (= s0_q2_16 s0_q1_16)) (=> (> s0_q1_16 p12) (= s0_q2_16 p12)))))
(assert (=> (= choice_16 1.0) (and (=> (<= s1_q1_16 p13) (= s1_q2_16 s1_q1_16)) (=> (> s1_q1_16 p13) (= s1_q2_16 p13)))))
(assert (=> (= choice_16 2.0) (and (=> (<= s2_q1_16 p14) (= s2_q2_16 s2_q1_16)) (=> (> s2_q1_16 p14) (= s2_q2_16 p14)))))


;flying back
(assert (= x3_16 0))
(assert (= x3_16 (+ x2_16 (- (* drone_velocity t3_16)))))
(assert (= b3_16 (+ b2_16 (* battery_charge_rate_fly t3_16))))
(assert (= s0_q3_16 (+ s0_q2_16 (* queue_data_rate t3_16))))
(assert (= s1_q3_16 (+ s1_q2_16 (* queue_data_rate t3_16))))
(assert (= s2_q3_16 (+ s2_q2_16 (* queue_data_rate t3_16))))

(assert (and (= bc_16 100.0) (= s0_qc_16 0.001662249821101192) (= s1_qc_16 0.001432472599423251) (= s2_qc_16 0.002393096135807748)))

(assert (and (= bi_16 bc_16) (= s0_qi_16 s0_qc_16) (= s1_qi_16 s1_qc_16) (= s2_qi_16 s2_qc_16)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_16 p0) (<= s0_qi_16 p1)) (<= (+ s1_qi_16 p2) s0_qi_16)) (<= (+ s2_qi_16 p3) s0_qi_16)) (and (and (and (>= bi_16 p4) (<= s1_qi_16 p5)) (<= (+ s0_qi_16 p6) s1_qi_16)) (<= (+ s2_qi_16 p7) s1_qi_16))) (and (and (and (>= bi_16 p8) (<= s2_qi_16 p9)) (<= (+ s1_qi_16 p10) s2_qi_16)) (<= (+ s0_qi_16 p11) s2_qi_16)))(and (and (> b0_16 0.0) (> b1_16 0.0) (> b2_16 0.0) (> b3_16 0.0) (< s0_q0_16 100.0) (< s0_q1_16 100.0) (< s0_q2_16 100.0) (< s0_q3_16 100.0) (< s1_q0_16 100.0) (< s1_q1_16 100.0) (< s1_q2_16 100.0) (< s1_q3_16 100.0) (< s2_q0_16 100.0) (< s2_q1_16 100.0) (< s2_q2_16 100.0) (< s2_q3_16 100.0))(or (or (and (and (and (>= b3_16 p0) (<= s0_q3_16 p1)) (<= (+ s1_q3_16 p2) s0_q3_16)) (<= (+ s2_q3_16 p3) s0_q3_16)) (and (and (and (>= b3_16 p4) (<= s1_q3_16 p5)) (<= (+ s0_q3_16 p6) s1_q3_16)) (<= (+ s2_q3_16 p7) s1_q3_16))) (and (and (and (>= b3_16 p8) (<= s2_q3_16 p9)) (<= (+ s1_q3_16 p10) s2_q3_16)) (<= (+ s0_q3_16 p11) s2_q3_16))))))

(declare-fun x0_15 () Real)
(declare-fun x1_15 () Real)
(declare-fun x2_15 () Real)
(declare-fun x3_15 () Real)
(declare-fun bi_15 () Real)
(declare-fun b0_15 () Real)
(declare-fun b1_15 () Real)
(declare-fun b2_15 () Real)
(declare-fun b3_15 () Real)
(declare-fun s0_qi_15 () Real)
(declare-fun s0_q0_15 () Real)
(declare-fun s0_q1_15 () Real)
(declare-fun s0_q2_15 () Real)
(declare-fun s0_q3_15 () Real)
(declare-fun s1_qi_15 () Real)
(declare-fun s1_q0_15 () Real)
(declare-fun s1_q1_15 () Real)
(declare-fun s1_q2_15 () Real)
(declare-fun s1_q3_15 () Real)
(declare-fun s2_qi_15 () Real)
(declare-fun s2_q0_15 () Real)
(declare-fun s2_q1_15 () Real)
(declare-fun s2_q2_15 () Real)
(declare-fun s2_q3_15 () Real)
(declare-fun t0_15 () Real)
(declare-fun t1_15 () Real)
(declare-fun t2_15 () Real)
(declare-fun t3_15 () Real)
(declare-fun bc_15 () Real)
(declare-fun s0_qc_15 () Real)
(declare-fun s1_qc_15 () Real)
(declare-fun s2_qc_15 () Real)
(assert (>= t0_15 0.0))
(assert (>= t1_15 0.0))
(assert (>= t2_15 0.0))
(assert (>= t3_15 0.0))
(assert (<= bi_15 100.0))
(assert (<= b0_15 100.0))
(assert (<= b1_15 100.0))
(assert (<= b2_15 100.0))
(assert (<= b3_15 100.0))
(assert (>= s0_qi_15 0.0))
(assert (>= s0_q0_15 0.0))
(assert (>= s0_q1_15 0.0))
(assert (>= s0_q2_15 0.0))
(assert (>= s0_q3_15 0.0))
(assert (>= s1_qi_15 0.0))
(assert (>= s1_q0_15 0.0))
(assert (>= s1_q1_15 0.0))
(assert (>= s1_q2_15 0.0))
(assert (>= s1_q3_15 0.0))
(assert (>= s2_qi_15 0.0))
(assert (>= s2_q0_15 0.0))
(assert (>= s2_q1_15 0.0))
(assert (>= s2_q2_15 0.0))
(assert (>= s2_q3_15 0.0))
(assert (<= s0_qi_15 100.0))
(assert (<= s1_qi_15 100.0))
(declare-fun choice_15 () Real)
(assert (or (= choice_15 0.0) (= choice_15 1.0) (= choice_15 2.0)))


;charging
(assert (= x0_15 0))
(assert (= b0_15 (+ bi_15 (* battery_charging_rate t0_15))))
(assert (= s0_q0_15 (+ s0_qi_15 (* queue_data_rate t0_15))))
(assert (= s1_q0_15 (+ s1_qi_15 (* queue_data_rate t0_15))))
(assert (= s2_q0_15 (+ s2_qi_15 (* queue_data_rate t0_15))))
(assert (and (=> (>= bi_15 p15) (= b0_15 bi_15)) (=> (< bi_15 p15) (= b0_15 p15))))
(assert (=> (and (and (and (>= bi_15 p0) (<= s0_qi_15 p1)) (<= (+ s1_qi_15 p2) s0_qi_15)) (<= (+ s2_qi_15 p3) s0_qi_15)) (= choice_15 0.0)))
(assert (=> (and (not (and (and (and (>= bi_15 p0) (<= s0_qi_15 p1)) (<= (+ s1_qi_15 p2) s0_qi_15)) (<= (+ s2_qi_15 p3) s0_qi_15))) (and (and (and (>= bi_15 p4) (<= s1_qi_15 p5)) (<= (+ s0_qi_15 p6) s1_qi_15)) (<= (+ s2_qi_15 p7) s1_qi_15))) (= choice_15 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_15 p0) (<= s0_qi_15 p1)) (<= (+ s1_qi_15 p2) s0_qi_15)) (<= (+ s2_qi_15 p3) s0_qi_15))) (not (and (and (and (>= bi_15 p4) (<= s1_qi_15 p5)) (<= (+ s0_qi_15 p6) s1_qi_15)) (<= (+ s2_qi_15 p7) s1_qi_15)))) (and (and (and (>= bi_15 p8) (<= s2_qi_15 p9)) (<= (+ s1_qi_15 p10) s2_qi_15)) (<= (+ s0_qi_15 p11) s2_qi_15))) (= choice_15 2.0)))


;flying to sensors
(assert (=> (= choice_15 0.0) (= x1_15 s0_loc)))
(assert (=> (= choice_15 1.0) (= x1_15 s1_loc)))
(assert (=> (= choice_15 2.0) (= x1_15 s2_loc)))
(assert (= x1_15 (+ x0_15 (* drone_velocity t1_15))))
(assert (= b1_15 (+ b0_15 (* battery_charge_rate_fly t1_15))))
(assert (= s0_q1_15 (+ s0_q0_15 (* queue_data_rate t1_15))))
(assert (= s1_q1_15 (+ s1_q0_15 (* queue_data_rate t1_15))))
(assert (= s2_q1_15 (+ s2_q0_15 (* queue_data_rate t1_15))))


;Collecting data
(assert (= x2_15 x1_15))
(assert (= b2_15 (+ b1_15 (* battery_charge_rate_hover t2_15))))
(assert (=> (= choice_15 0.0) (and (= s0_q2_15 (- s0_q1_15 (* queue_upload_rate t2_15))) (= s1_q2_15 (+ s1_q1_15 (* queue_data_rate t2_15))) (= s2_q2_15 (+ s2_q1_15 (* queue_data_rate t2_15))))))
(assert (=> (= choice_15 1.0) (and (= s1_q2_15 (- s1_q1_15 (* queue_upload_rate t2_15))) (= s0_q2_15 (+ s0_q1_15 (* queue_data_rate t2_15))) (= s2_q2_15 (+ s2_q1_15 (* queue_data_rate t2_15))))))
(assert (=> (= choice_15 2.0) (and (= s2_q2_15 (- s2_q1_15 (* queue_upload_rate t2_15))) (= s0_q2_15 (+ s0_q1_15 (* queue_data_rate t2_15))) (= s1_q2_15 (+ s1_q1_15 (* queue_data_rate t2_15))))))
(assert (=> (= choice_15 0.0) (and (=> (<= s0_q1_15 p12) (= s0_q2_15 s0_q1_15)) (=> (> s0_q1_15 p12) (= s0_q2_15 p12)))))
(assert (=> (= choice_15 1.0) (and (=> (<= s1_q1_15 p13) (= s1_q2_15 s1_q1_15)) (=> (> s1_q1_15 p13) (= s1_q2_15 p13)))))
(assert (=> (= choice_15 2.0) (and (=> (<= s2_q1_15 p14) (= s2_q2_15 s2_q1_15)) (=> (> s2_q1_15 p14) (= s2_q2_15 p14)))))


;flying back
(assert (= x3_15 0))
(assert (= x3_15 (+ x2_15 (- (* drone_velocity t3_15)))))
(assert (= b3_15 (+ b2_15 (* battery_charge_rate_fly t3_15))))
(assert (= s0_q3_15 (+ s0_q2_15 (* queue_data_rate t3_15))))
(assert (= s1_q3_15 (+ s1_q2_15 (* queue_data_rate t3_15))))
(assert (= s2_q3_15 (+ s2_q2_15 (* queue_data_rate t3_15))))

(assert (and (= bc_15 96.5) (= s0_qc_15 100.0) (= s1_qc_15 0.0) (= s2_qc_15 0.004078369140625024)))

(assert (and (= bi_15 bc_15) (= s0_qi_15 s0_qc_15) (= s1_qi_15 s1_qc_15) (= s2_qi_15 s2_qc_15)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_15 p0) (<= s0_qi_15 p1)) (<= (+ s1_qi_15 p2) s0_qi_15)) (<= (+ s2_qi_15 p3) s0_qi_15)) (and (and (and (>= bi_15 p4) (<= s1_qi_15 p5)) (<= (+ s0_qi_15 p6) s1_qi_15)) (<= (+ s2_qi_15 p7) s1_qi_15))) (and (and (and (>= bi_15 p8) (<= s2_qi_15 p9)) (<= (+ s1_qi_15 p10) s2_qi_15)) (<= (+ s0_qi_15 p11) s2_qi_15)))(and (and (> b0_15 0.0) (> b1_15 0.0) (> b2_15 0.0) (> b3_15 0.0) (< s0_q0_15 100.0) (< s0_q1_15 100.0) (< s0_q2_15 100.0) (< s0_q3_15 100.0) (< s1_q0_15 100.0) (< s1_q1_15 100.0) (< s1_q2_15 100.0) (< s1_q3_15 100.0) (< s2_q0_15 100.0) (< s2_q1_15 100.0) (< s2_q2_15 100.0) (< s2_q3_15 100.0))(or (or (and (and (and (>= b3_15 p0) (<= s0_q3_15 p1)) (<= (+ s1_q3_15 p2) s0_q3_15)) (<= (+ s2_q3_15 p3) s0_q3_15)) (and (and (and (>= b3_15 p4) (<= s1_q3_15 p5)) (<= (+ s0_q3_15 p6) s1_q3_15)) (<= (+ s2_q3_15 p7) s1_q3_15))) (and (and (and (>= b3_15 p8) (<= s2_q3_15 p9)) (<= (+ s1_q3_15 p10) s2_q3_15)) (<= (+ s0_q3_15 p11) s2_q3_15))))))

(declare-fun x0_14 () Real)
(declare-fun x1_14 () Real)
(declare-fun x2_14 () Real)
(declare-fun x3_14 () Real)
(declare-fun bi_14 () Real)
(declare-fun b0_14 () Real)
(declare-fun b1_14 () Real)
(declare-fun b2_14 () Real)
(declare-fun b3_14 () Real)
(declare-fun s0_qi_14 () Real)
(declare-fun s0_q0_14 () Real)
(declare-fun s0_q1_14 () Real)
(declare-fun s0_q2_14 () Real)
(declare-fun s0_q3_14 () Real)
(declare-fun s1_qi_14 () Real)
(declare-fun s1_q0_14 () Real)
(declare-fun s1_q1_14 () Real)
(declare-fun s1_q2_14 () Real)
(declare-fun s1_q3_14 () Real)
(declare-fun s2_qi_14 () Real)
(declare-fun s2_q0_14 () Real)
(declare-fun s2_q1_14 () Real)
(declare-fun s2_q2_14 () Real)
(declare-fun s2_q3_14 () Real)
(declare-fun t0_14 () Real)
(declare-fun t1_14 () Real)
(declare-fun t2_14 () Real)
(declare-fun t3_14 () Real)
(declare-fun bc_14 () Real)
(declare-fun s0_qc_14 () Real)
(declare-fun s1_qc_14 () Real)
(declare-fun s2_qc_14 () Real)
(assert (>= t0_14 0.0))
(assert (>= t1_14 0.0))
(assert (>= t2_14 0.0))
(assert (>= t3_14 0.0))
(assert (<= bi_14 100.0))
(assert (<= b0_14 100.0))
(assert (<= b1_14 100.0))
(assert (<= b2_14 100.0))
(assert (<= b3_14 100.0))
(assert (>= s0_qi_14 0.0))
(assert (>= s0_q0_14 0.0))
(assert (>= s0_q1_14 0.0))
(assert (>= s0_q2_14 0.0))
(assert (>= s0_q3_14 0.0))
(assert (>= s1_qi_14 0.0))
(assert (>= s1_q0_14 0.0))
(assert (>= s1_q1_14 0.0))
(assert (>= s1_q2_14 0.0))
(assert (>= s1_q3_14 0.0))
(assert (>= s2_qi_14 0.0))
(assert (>= s2_q0_14 0.0))
(assert (>= s2_q1_14 0.0))
(assert (>= s2_q2_14 0.0))
(assert (>= s2_q3_14 0.0))
(assert (<= s0_qi_14 100.0))
(assert (<= s1_qi_14 100.0))
(declare-fun choice_14 () Real)
(assert (or (= choice_14 0.0) (= choice_14 1.0) (= choice_14 2.0)))


;charging
(assert (= x0_14 0))
(assert (= b0_14 (+ bi_14 (* battery_charging_rate t0_14))))
(assert (= s0_q0_14 (+ s0_qi_14 (* queue_data_rate t0_14))))
(assert (= s1_q0_14 (+ s1_qi_14 (* queue_data_rate t0_14))))
(assert (= s2_q0_14 (+ s2_qi_14 (* queue_data_rate t0_14))))
(assert (and (=> (>= bi_14 p15) (= b0_14 bi_14)) (=> (< bi_14 p15) (= b0_14 p15))))
(assert (=> (and (and (and (>= bi_14 p0) (<= s0_qi_14 p1)) (<= (+ s1_qi_14 p2) s0_qi_14)) (<= (+ s2_qi_14 p3) s0_qi_14)) (= choice_14 0.0)))
(assert (=> (and (not (and (and (and (>= bi_14 p0) (<= s0_qi_14 p1)) (<= (+ s1_qi_14 p2) s0_qi_14)) (<= (+ s2_qi_14 p3) s0_qi_14))) (and (and (and (>= bi_14 p4) (<= s1_qi_14 p5)) (<= (+ s0_qi_14 p6) s1_qi_14)) (<= (+ s2_qi_14 p7) s1_qi_14))) (= choice_14 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_14 p0) (<= s0_qi_14 p1)) (<= (+ s1_qi_14 p2) s0_qi_14)) (<= (+ s2_qi_14 p3) s0_qi_14))) (not (and (and (and (>= bi_14 p4) (<= s1_qi_14 p5)) (<= (+ s0_qi_14 p6) s1_qi_14)) (<= (+ s2_qi_14 p7) s1_qi_14)))) (and (and (and (>= bi_14 p8) (<= s2_qi_14 p9)) (<= (+ s1_qi_14 p10) s2_qi_14)) (<= (+ s0_qi_14 p11) s2_qi_14))) (= choice_14 2.0)))


;flying to sensors
(assert (=> (= choice_14 0.0) (= x1_14 s0_loc)))
(assert (=> (= choice_14 1.0) (= x1_14 s1_loc)))
(assert (=> (= choice_14 2.0) (= x1_14 s2_loc)))
(assert (= x1_14 (+ x0_14 (* drone_velocity t1_14))))
(assert (= b1_14 (+ b0_14 (* battery_charge_rate_fly t1_14))))
(assert (= s0_q1_14 (+ s0_q0_14 (* queue_data_rate t1_14))))
(assert (= s1_q1_14 (+ s1_q0_14 (* queue_data_rate t1_14))))
(assert (= s2_q1_14 (+ s2_q0_14 (* queue_data_rate t1_14))))


;Collecting data
(assert (= x2_14 x1_14))
(assert (= b2_14 (+ b1_14 (* battery_charge_rate_hover t2_14))))
(assert (=> (= choice_14 0.0) (and (= s0_q2_14 (- s0_q1_14 (* queue_upload_rate t2_14))) (= s1_q2_14 (+ s1_q1_14 (* queue_data_rate t2_14))) (= s2_q2_14 (+ s2_q1_14 (* queue_data_rate t2_14))))))
(assert (=> (= choice_14 1.0) (and (= s1_q2_14 (- s1_q1_14 (* queue_upload_rate t2_14))) (= s0_q2_14 (+ s0_q1_14 (* queue_data_rate t2_14))) (= s2_q2_14 (+ s2_q1_14 (* queue_data_rate t2_14))))))
(assert (=> (= choice_14 2.0) (and (= s2_q2_14 (- s2_q1_14 (* queue_upload_rate t2_14))) (= s0_q2_14 (+ s0_q1_14 (* queue_data_rate t2_14))) (= s1_q2_14 (+ s1_q1_14 (* queue_data_rate t2_14))))))
(assert (=> (= choice_14 0.0) (and (=> (<= s0_q1_14 p12) (= s0_q2_14 s0_q1_14)) (=> (> s0_q1_14 p12) (= s0_q2_14 p12)))))
(assert (=> (= choice_14 1.0) (and (=> (<= s1_q1_14 p13) (= s1_q2_14 s1_q1_14)) (=> (> s1_q1_14 p13) (= s1_q2_14 p13)))))
(assert (=> (= choice_14 2.0) (and (=> (<= s2_q1_14 p14) (= s2_q2_14 s2_q1_14)) (=> (> s2_q1_14 p14) (= s2_q2_14 p14)))))


;flying back
(assert (= x3_14 0))
(assert (= x3_14 (+ x2_14 (- (* drone_velocity t3_14)))))
(assert (= b3_14 (+ b2_14 (* battery_charge_rate_fly t3_14))))
(assert (= s0_q3_14 (+ s0_q2_14 (* queue_data_rate t3_14))))
(assert (= s1_q3_14 (+ s1_q2_14 (* queue_data_rate t3_14))))
(assert (= s2_q3_14 (+ s2_q2_14 (* queue_data_rate t3_14))))

(assert (and (= bc_14 99.234375) (= s0_qc_14 0.03569776348039189) (= s1_qc_14 0.03569776348039189) (= s2_qc_14 0.03569776348039189)))

(assert (and (= bi_14 bc_14) (= s0_qi_14 s0_qc_14) (= s1_qi_14 s1_qc_14) (= s2_qi_14 s2_qc_14)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_14 p0) (<= s0_qi_14 p1)) (<= (+ s1_qi_14 p2) s0_qi_14)) (<= (+ s2_qi_14 p3) s0_qi_14)) (and (and (and (>= bi_14 p4) (<= s1_qi_14 p5)) (<= (+ s0_qi_14 p6) s1_qi_14)) (<= (+ s2_qi_14 p7) s1_qi_14))) (and (and (and (>= bi_14 p8) (<= s2_qi_14 p9)) (<= (+ s1_qi_14 p10) s2_qi_14)) (<= (+ s0_qi_14 p11) s2_qi_14)))(and (and (> b0_14 0.0) (> b1_14 0.0) (> b2_14 0.0) (> b3_14 0.0) (< s0_q0_14 100.0) (< s0_q1_14 100.0) (< s0_q2_14 100.0) (< s0_q3_14 100.0) (< s1_q0_14 100.0) (< s1_q1_14 100.0) (< s1_q2_14 100.0) (< s1_q3_14 100.0) (< s2_q0_14 100.0) (< s2_q1_14 100.0) (< s2_q2_14 100.0) (< s2_q3_14 100.0))(or (or (and (and (and (>= b3_14 p0) (<= s0_q3_14 p1)) (<= (+ s1_q3_14 p2) s0_q3_14)) (<= (+ s2_q3_14 p3) s0_q3_14)) (and (and (and (>= b3_14 p4) (<= s1_q3_14 p5)) (<= (+ s0_q3_14 p6) s1_q3_14)) (<= (+ s2_q3_14 p7) s1_q3_14))) (and (and (and (>= b3_14 p8) (<= s2_q3_14 p9)) (<= (+ s1_q3_14 p10) s2_q3_14)) (<= (+ s0_q3_14 p11) s2_q3_14))))))

(declare-fun x0_13 () Real)
(declare-fun x1_13 () Real)
(declare-fun x2_13 () Real)
(declare-fun x3_13 () Real)
(declare-fun bi_13 () Real)
(declare-fun b0_13 () Real)
(declare-fun b1_13 () Real)
(declare-fun b2_13 () Real)
(declare-fun b3_13 () Real)
(declare-fun s0_qi_13 () Real)
(declare-fun s0_q0_13 () Real)
(declare-fun s0_q1_13 () Real)
(declare-fun s0_q2_13 () Real)
(declare-fun s0_q3_13 () Real)
(declare-fun s1_qi_13 () Real)
(declare-fun s1_q0_13 () Real)
(declare-fun s1_q1_13 () Real)
(declare-fun s1_q2_13 () Real)
(declare-fun s1_q3_13 () Real)
(declare-fun s2_qi_13 () Real)
(declare-fun s2_q0_13 () Real)
(declare-fun s2_q1_13 () Real)
(declare-fun s2_q2_13 () Real)
(declare-fun s2_q3_13 () Real)
(declare-fun t0_13 () Real)
(declare-fun t1_13 () Real)
(declare-fun t2_13 () Real)
(declare-fun t3_13 () Real)
(declare-fun bc_13 () Real)
(declare-fun s0_qc_13 () Real)
(declare-fun s1_qc_13 () Real)
(declare-fun s2_qc_13 () Real)
(assert (>= t0_13 0.0))
(assert (>= t1_13 0.0))
(assert (>= t2_13 0.0))
(assert (>= t3_13 0.0))
(assert (<= bi_13 100.0))
(assert (<= b0_13 100.0))
(assert (<= b1_13 100.0))
(assert (<= b2_13 100.0))
(assert (<= b3_13 100.0))
(assert (>= s0_qi_13 0.0))
(assert (>= s0_q0_13 0.0))
(assert (>= s0_q1_13 0.0))
(assert (>= s0_q2_13 0.0))
(assert (>= s0_q3_13 0.0))
(assert (>= s1_qi_13 0.0))
(assert (>= s1_q0_13 0.0))
(assert (>= s1_q1_13 0.0))
(assert (>= s1_q2_13 0.0))
(assert (>= s1_q3_13 0.0))
(assert (>= s2_qi_13 0.0))
(assert (>= s2_q0_13 0.0))
(assert (>= s2_q1_13 0.0))
(assert (>= s2_q2_13 0.0))
(assert (>= s2_q3_13 0.0))
(assert (<= s0_qi_13 100.0))
(assert (<= s1_qi_13 100.0))
(declare-fun choice_13 () Real)
(assert (or (= choice_13 0.0) (= choice_13 1.0) (= choice_13 2.0)))


;charging
(assert (= x0_13 0))
(assert (= b0_13 (+ bi_13 (* battery_charging_rate t0_13))))
(assert (= s0_q0_13 (+ s0_qi_13 (* queue_data_rate t0_13))))
(assert (= s1_q0_13 (+ s1_qi_13 (* queue_data_rate t0_13))))
(assert (= s2_q0_13 (+ s2_qi_13 (* queue_data_rate t0_13))))
(assert (and (=> (>= bi_13 p15) (= b0_13 bi_13)) (=> (< bi_13 p15) (= b0_13 p15))))
(assert (=> (and (and (and (>= bi_13 p0) (<= s0_qi_13 p1)) (<= (+ s1_qi_13 p2) s0_qi_13)) (<= (+ s2_qi_13 p3) s0_qi_13)) (= choice_13 0.0)))
(assert (=> (and (not (and (and (and (>= bi_13 p0) (<= s0_qi_13 p1)) (<= (+ s1_qi_13 p2) s0_qi_13)) (<= (+ s2_qi_13 p3) s0_qi_13))) (and (and (and (>= bi_13 p4) (<= s1_qi_13 p5)) (<= (+ s0_qi_13 p6) s1_qi_13)) (<= (+ s2_qi_13 p7) s1_qi_13))) (= choice_13 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_13 p0) (<= s0_qi_13 p1)) (<= (+ s1_qi_13 p2) s0_qi_13)) (<= (+ s2_qi_13 p3) s0_qi_13))) (not (and (and (and (>= bi_13 p4) (<= s1_qi_13 p5)) (<= (+ s0_qi_13 p6) s1_qi_13)) (<= (+ s2_qi_13 p7) s1_qi_13)))) (and (and (and (>= bi_13 p8) (<= s2_qi_13 p9)) (<= (+ s1_qi_13 p10) s2_qi_13)) (<= (+ s0_qi_13 p11) s2_qi_13))) (= choice_13 2.0)))


;flying to sensors
(assert (=> (= choice_13 0.0) (= x1_13 s0_loc)))
(assert (=> (= choice_13 1.0) (= x1_13 s1_loc)))
(assert (=> (= choice_13 2.0) (= x1_13 s2_loc)))
(assert (= x1_13 (+ x0_13 (* drone_velocity t1_13))))
(assert (= b1_13 (+ b0_13 (* battery_charge_rate_fly t1_13))))
(assert (= s0_q1_13 (+ s0_q0_13 (* queue_data_rate t1_13))))
(assert (= s1_q1_13 (+ s1_q0_13 (* queue_data_rate t1_13))))
(assert (= s2_q1_13 (+ s2_q0_13 (* queue_data_rate t1_13))))


;Collecting data
(assert (= x2_13 x1_13))
(assert (= b2_13 (+ b1_13 (* battery_charge_rate_hover t2_13))))
(assert (=> (= choice_13 0.0) (and (= s0_q2_13 (- s0_q1_13 (* queue_upload_rate t2_13))) (= s1_q2_13 (+ s1_q1_13 (* queue_data_rate t2_13))) (= s2_q2_13 (+ s2_q1_13 (* queue_data_rate t2_13))))))
(assert (=> (= choice_13 1.0) (and (= s1_q2_13 (- s1_q1_13 (* queue_upload_rate t2_13))) (= s0_q2_13 (+ s0_q1_13 (* queue_data_rate t2_13))) (= s2_q2_13 (+ s2_q1_13 (* queue_data_rate t2_13))))))
(assert (=> (= choice_13 2.0) (and (= s2_q2_13 (- s2_q1_13 (* queue_upload_rate t2_13))) (= s0_q2_13 (+ s0_q1_13 (* queue_data_rate t2_13))) (= s1_q2_13 (+ s1_q1_13 (* queue_data_rate t2_13))))))
(assert (=> (= choice_13 0.0) (and (=> (<= s0_q1_13 p12) (= s0_q2_13 s0_q1_13)) (=> (> s0_q1_13 p12) (= s0_q2_13 p12)))))
(assert (=> (= choice_13 1.0) (and (=> (<= s1_q1_13 p13) (= s1_q2_13 s1_q1_13)) (=> (> s1_q1_13 p13) (= s1_q2_13 p13)))))
(assert (=> (= choice_13 2.0) (and (=> (<= s2_q1_13 p14) (= s2_q2_13 s2_q1_13)) (=> (> s2_q1_13 p14) (= s2_q2_13 p14)))))


;flying back
(assert (= x3_13 0))
(assert (= x3_13 (+ x2_13 (- (* drone_velocity t3_13)))))
(assert (= b3_13 (+ b2_13 (* battery_charge_rate_fly t3_13))))
(assert (= s0_q3_13 (+ s0_q2_13 (* queue_data_rate t3_13))))
(assert (= s1_q3_13 (+ s1_q2_13 (* queue_data_rate t3_13))))
(assert (= s2_q3_13 (+ s2_q2_13 (* queue_data_rate t3_13))))

(assert (and (= bc_13 99.625) (= s0_qc_13 0.004901960784313486) (= s1_qc_13 0.004901960784313486) (= s2_qc_13 0.004901960784313486)))

(assert (and (= bi_13 bc_13) (= s0_qi_13 s0_qc_13) (= s1_qi_13 s1_qc_13) (= s2_qi_13 s2_qc_13)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_13 p0) (<= s0_qi_13 p1)) (<= (+ s1_qi_13 p2) s0_qi_13)) (<= (+ s2_qi_13 p3) s0_qi_13)) (and (and (and (>= bi_13 p4) (<= s1_qi_13 p5)) (<= (+ s0_qi_13 p6) s1_qi_13)) (<= (+ s2_qi_13 p7) s1_qi_13))) (and (and (and (>= bi_13 p8) (<= s2_qi_13 p9)) (<= (+ s1_qi_13 p10) s2_qi_13)) (<= (+ s0_qi_13 p11) s2_qi_13)))(and (and (> b0_13 0.0) (> b1_13 0.0) (> b2_13 0.0) (> b3_13 0.0) (< s0_q0_13 100.0) (< s0_q1_13 100.0) (< s0_q2_13 100.0) (< s0_q3_13 100.0) (< s1_q0_13 100.0) (< s1_q1_13 100.0) (< s1_q2_13 100.0) (< s1_q3_13 100.0) (< s2_q0_13 100.0) (< s2_q1_13 100.0) (< s2_q2_13 100.0) (< s2_q3_13 100.0))(or (or (and (and (and (>= b3_13 p0) (<= s0_q3_13 p1)) (<= (+ s1_q3_13 p2) s0_q3_13)) (<= (+ s2_q3_13 p3) s0_q3_13)) (and (and (and (>= b3_13 p4) (<= s1_q3_13 p5)) (<= (+ s0_q3_13 p6) s1_q3_13)) (<= (+ s2_q3_13 p7) s1_q3_13))) (and (and (and (>= b3_13 p8) (<= s2_q3_13 p9)) (<= (+ s1_q3_13 p10) s2_q3_13)) (<= (+ s0_q3_13 p11) s2_q3_13))))))

(declare-fun x0_12 () Real)
(declare-fun x1_12 () Real)
(declare-fun x2_12 () Real)
(declare-fun x3_12 () Real)
(declare-fun bi_12 () Real)
(declare-fun b0_12 () Real)
(declare-fun b1_12 () Real)
(declare-fun b2_12 () Real)
(declare-fun b3_12 () Real)
(declare-fun s0_qi_12 () Real)
(declare-fun s0_q0_12 () Real)
(declare-fun s0_q1_12 () Real)
(declare-fun s0_q2_12 () Real)
(declare-fun s0_q3_12 () Real)
(declare-fun s1_qi_12 () Real)
(declare-fun s1_q0_12 () Real)
(declare-fun s1_q1_12 () Real)
(declare-fun s1_q2_12 () Real)
(declare-fun s1_q3_12 () Real)
(declare-fun s2_qi_12 () Real)
(declare-fun s2_q0_12 () Real)
(declare-fun s2_q1_12 () Real)
(declare-fun s2_q2_12 () Real)
(declare-fun s2_q3_12 () Real)
(declare-fun t0_12 () Real)
(declare-fun t1_12 () Real)
(declare-fun t2_12 () Real)
(declare-fun t3_12 () Real)
(declare-fun bc_12 () Real)
(declare-fun s0_qc_12 () Real)
(declare-fun s1_qc_12 () Real)
(declare-fun s2_qc_12 () Real)
(assert (>= t0_12 0.0))
(assert (>= t1_12 0.0))
(assert (>= t2_12 0.0))
(assert (>= t3_12 0.0))
(assert (<= bi_12 100.0))
(assert (<= b0_12 100.0))
(assert (<= b1_12 100.0))
(assert (<= b2_12 100.0))
(assert (<= b3_12 100.0))
(assert (>= s0_qi_12 0.0))
(assert (>= s0_q0_12 0.0))
(assert (>= s0_q1_12 0.0))
(assert (>= s0_q2_12 0.0))
(assert (>= s0_q3_12 0.0))
(assert (>= s1_qi_12 0.0))
(assert (>= s1_q0_12 0.0))
(assert (>= s1_q1_12 0.0))
(assert (>= s1_q2_12 0.0))
(assert (>= s1_q3_12 0.0))
(assert (>= s2_qi_12 0.0))
(assert (>= s2_q0_12 0.0))
(assert (>= s2_q1_12 0.0))
(assert (>= s2_q2_12 0.0))
(assert (>= s2_q3_12 0.0))
(assert (<= s0_qi_12 100.0))
(assert (<= s1_qi_12 100.0))
(declare-fun choice_12 () Real)
(assert (or (= choice_12 0.0) (= choice_12 1.0) (= choice_12 2.0)))


;charging
(assert (= x0_12 0))
(assert (= b0_12 (+ bi_12 (* battery_charging_rate t0_12))))
(assert (= s0_q0_12 (+ s0_qi_12 (* queue_data_rate t0_12))))
(assert (= s1_q0_12 (+ s1_qi_12 (* queue_data_rate t0_12))))
(assert (= s2_q0_12 (+ s2_qi_12 (* queue_data_rate t0_12))))
(assert (and (=> (>= bi_12 p15) (= b0_12 bi_12)) (=> (< bi_12 p15) (= b0_12 p15))))
(assert (=> (and (and (and (>= bi_12 p0) (<= s0_qi_12 p1)) (<= (+ s1_qi_12 p2) s0_qi_12)) (<= (+ s2_qi_12 p3) s0_qi_12)) (= choice_12 0.0)))
(assert (=> (and (not (and (and (and (>= bi_12 p0) (<= s0_qi_12 p1)) (<= (+ s1_qi_12 p2) s0_qi_12)) (<= (+ s2_qi_12 p3) s0_qi_12))) (and (and (and (>= bi_12 p4) (<= s1_qi_12 p5)) (<= (+ s0_qi_12 p6) s1_qi_12)) (<= (+ s2_qi_12 p7) s1_qi_12))) (= choice_12 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_12 p0) (<= s0_qi_12 p1)) (<= (+ s1_qi_12 p2) s0_qi_12)) (<= (+ s2_qi_12 p3) s0_qi_12))) (not (and (and (and (>= bi_12 p4) (<= s1_qi_12 p5)) (<= (+ s0_qi_12 p6) s1_qi_12)) (<= (+ s2_qi_12 p7) s1_qi_12)))) (and (and (and (>= bi_12 p8) (<= s2_qi_12 p9)) (<= (+ s1_qi_12 p10) s2_qi_12)) (<= (+ s0_qi_12 p11) s2_qi_12))) (= choice_12 2.0)))


;flying to sensors
(assert (=> (= choice_12 0.0) (= x1_12 s0_loc)))
(assert (=> (= choice_12 1.0) (= x1_12 s1_loc)))
(assert (=> (= choice_12 2.0) (= x1_12 s2_loc)))
(assert (= x1_12 (+ x0_12 (* drone_velocity t1_12))))
(assert (= b1_12 (+ b0_12 (* battery_charge_rate_fly t1_12))))
(assert (= s0_q1_12 (+ s0_q0_12 (* queue_data_rate t1_12))))
(assert (= s1_q1_12 (+ s1_q0_12 (* queue_data_rate t1_12))))
(assert (= s2_q1_12 (+ s2_q0_12 (* queue_data_rate t1_12))))


;Collecting data
(assert (= x2_12 x1_12))
(assert (= b2_12 (+ b1_12 (* battery_charge_rate_hover t2_12))))
(assert (=> (= choice_12 0.0) (and (= s0_q2_12 (- s0_q1_12 (* queue_upload_rate t2_12))) (= s1_q2_12 (+ s1_q1_12 (* queue_data_rate t2_12))) (= s2_q2_12 (+ s2_q1_12 (* queue_data_rate t2_12))))))
(assert (=> (= choice_12 1.0) (and (= s1_q2_12 (- s1_q1_12 (* queue_upload_rate t2_12))) (= s0_q2_12 (+ s0_q1_12 (* queue_data_rate t2_12))) (= s2_q2_12 (+ s2_q1_12 (* queue_data_rate t2_12))))))
(assert (=> (= choice_12 2.0) (and (= s2_q2_12 (- s2_q1_12 (* queue_upload_rate t2_12))) (= s0_q2_12 (+ s0_q1_12 (* queue_data_rate t2_12))) (= s1_q2_12 (+ s1_q1_12 (* queue_data_rate t2_12))))))
(assert (=> (= choice_12 0.0) (and (=> (<= s0_q1_12 p12) (= s0_q2_12 s0_q1_12)) (=> (> s0_q1_12 p12) (= s0_q2_12 p12)))))
(assert (=> (= choice_12 1.0) (and (=> (<= s1_q1_12 p13) (= s1_q2_12 s1_q1_12)) (=> (> s1_q1_12 p13) (= s1_q2_12 p13)))))
(assert (=> (= choice_12 2.0) (and (=> (<= s2_q1_12 p14) (= s2_q2_12 s2_q1_12)) (=> (> s2_q1_12 p14) (= s2_q2_12 p14)))))


;flying back
(assert (= x3_12 0))
(assert (= x3_12 (+ x2_12 (- (* drone_velocity t3_12)))))
(assert (= b3_12 (+ b2_12 (* battery_charge_rate_fly t3_12))))
(assert (= s0_q3_12 (+ s0_q2_12 (* queue_data_rate t3_12))))
(assert (= s1_q3_12 (+ s1_q2_12 (* queue_data_rate t3_12))))
(assert (= s2_q3_12 (+ s2_q2_12 (* queue_data_rate t3_12))))

(assert (and (= bc_12 99.638671875) (= s0_qc_12 0.0) (= s1_qc_12 0.03542968749999975) (= s2_qc_12 0.04910156249999997)))

(assert (and (= bi_12 bc_12) (= s0_qi_12 s0_qc_12) (= s1_qi_12 s1_qc_12) (= s2_qi_12 s2_qc_12)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_12 p0) (<= s0_qi_12 p1)) (<= (+ s1_qi_12 p2) s0_qi_12)) (<= (+ s2_qi_12 p3) s0_qi_12)) (and (and (and (>= bi_12 p4) (<= s1_qi_12 p5)) (<= (+ s0_qi_12 p6) s1_qi_12)) (<= (+ s2_qi_12 p7) s1_qi_12))) (and (and (and (>= bi_12 p8) (<= s2_qi_12 p9)) (<= (+ s1_qi_12 p10) s2_qi_12)) (<= (+ s0_qi_12 p11) s2_qi_12)))(and (and (> b0_12 0.0) (> b1_12 0.0) (> b2_12 0.0) (> b3_12 0.0) (< s0_q0_12 100.0) (< s0_q1_12 100.0) (< s0_q2_12 100.0) (< s0_q3_12 100.0) (< s1_q0_12 100.0) (< s1_q1_12 100.0) (< s1_q2_12 100.0) (< s1_q3_12 100.0) (< s2_q0_12 100.0) (< s2_q1_12 100.0) (< s2_q2_12 100.0) (< s2_q3_12 100.0))(or (or (and (and (and (>= b3_12 p0) (<= s0_q3_12 p1)) (<= (+ s1_q3_12 p2) s0_q3_12)) (<= (+ s2_q3_12 p3) s0_q3_12)) (and (and (and (>= b3_12 p4) (<= s1_q3_12 p5)) (<= (+ s0_q3_12 p6) s1_q3_12)) (<= (+ s2_q3_12 p7) s1_q3_12))) (and (and (and (>= b3_12 p8) (<= s2_q3_12 p9)) (<= (+ s1_q3_12 p10) s2_q3_12)) (<= (+ s0_q3_12 p11) s2_q3_12))))))

(declare-fun x0_11 () Real)
(declare-fun x1_11 () Real)
(declare-fun x2_11 () Real)
(declare-fun x3_11 () Real)
(declare-fun bi_11 () Real)
(declare-fun b0_11 () Real)
(declare-fun b1_11 () Real)
(declare-fun b2_11 () Real)
(declare-fun b3_11 () Real)
(declare-fun s0_qi_11 () Real)
(declare-fun s0_q0_11 () Real)
(declare-fun s0_q1_11 () Real)
(declare-fun s0_q2_11 () Real)
(declare-fun s0_q3_11 () Real)
(declare-fun s1_qi_11 () Real)
(declare-fun s1_q0_11 () Real)
(declare-fun s1_q1_11 () Real)
(declare-fun s1_q2_11 () Real)
(declare-fun s1_q3_11 () Real)
(declare-fun s2_qi_11 () Real)
(declare-fun s2_q0_11 () Real)
(declare-fun s2_q1_11 () Real)
(declare-fun s2_q2_11 () Real)
(declare-fun s2_q3_11 () Real)
(declare-fun t0_11 () Real)
(declare-fun t1_11 () Real)
(declare-fun t2_11 () Real)
(declare-fun t3_11 () Real)
(declare-fun bc_11 () Real)
(declare-fun s0_qc_11 () Real)
(declare-fun s1_qc_11 () Real)
(declare-fun s2_qc_11 () Real)
(assert (>= t0_11 0.0))
(assert (>= t1_11 0.0))
(assert (>= t2_11 0.0))
(assert (>= t3_11 0.0))
(assert (<= bi_11 100.0))
(assert (<= b0_11 100.0))
(assert (<= b1_11 100.0))
(assert (<= b2_11 100.0))
(assert (<= b3_11 100.0))
(assert (>= s0_qi_11 0.0))
(assert (>= s0_q0_11 0.0))
(assert (>= s0_q1_11 0.0))
(assert (>= s0_q2_11 0.0))
(assert (>= s0_q3_11 0.0))
(assert (>= s1_qi_11 0.0))
(assert (>= s1_q0_11 0.0))
(assert (>= s1_q1_11 0.0))
(assert (>= s1_q2_11 0.0))
(assert (>= s1_q3_11 0.0))
(assert (>= s2_qi_11 0.0))
(assert (>= s2_q0_11 0.0))
(assert (>= s2_q1_11 0.0))
(assert (>= s2_q2_11 0.0))
(assert (>= s2_q3_11 0.0))
(assert (<= s0_qi_11 100.0))
(assert (<= s1_qi_11 100.0))
(declare-fun choice_11 () Real)
(assert (or (= choice_11 0.0) (= choice_11 1.0) (= choice_11 2.0)))


;charging
(assert (= x0_11 0))
(assert (= b0_11 (+ bi_11 (* battery_charging_rate t0_11))))
(assert (= s0_q0_11 (+ s0_qi_11 (* queue_data_rate t0_11))))
(assert (= s1_q0_11 (+ s1_qi_11 (* queue_data_rate t0_11))))
(assert (= s2_q0_11 (+ s2_qi_11 (* queue_data_rate t0_11))))
(assert (and (=> (>= bi_11 p15) (= b0_11 bi_11)) (=> (< bi_11 p15) (= b0_11 p15))))
(assert (=> (and (and (and (>= bi_11 p0) (<= s0_qi_11 p1)) (<= (+ s1_qi_11 p2) s0_qi_11)) (<= (+ s2_qi_11 p3) s0_qi_11)) (= choice_11 0.0)))
(assert (=> (and (not (and (and (and (>= bi_11 p0) (<= s0_qi_11 p1)) (<= (+ s1_qi_11 p2) s0_qi_11)) (<= (+ s2_qi_11 p3) s0_qi_11))) (and (and (and (>= bi_11 p4) (<= s1_qi_11 p5)) (<= (+ s0_qi_11 p6) s1_qi_11)) (<= (+ s2_qi_11 p7) s1_qi_11))) (= choice_11 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_11 p0) (<= s0_qi_11 p1)) (<= (+ s1_qi_11 p2) s0_qi_11)) (<= (+ s2_qi_11 p3) s0_qi_11))) (not (and (and (and (>= bi_11 p4) (<= s1_qi_11 p5)) (<= (+ s0_qi_11 p6) s1_qi_11)) (<= (+ s2_qi_11 p7) s1_qi_11)))) (and (and (and (>= bi_11 p8) (<= s2_qi_11 p9)) (<= (+ s1_qi_11 p10) s2_qi_11)) (<= (+ s0_qi_11 p11) s2_qi_11))) (= choice_11 2.0)))


;flying to sensors
(assert (=> (= choice_11 0.0) (= x1_11 s0_loc)))
(assert (=> (= choice_11 1.0) (= x1_11 s1_loc)))
(assert (=> (= choice_11 2.0) (= x1_11 s2_loc)))
(assert (= x1_11 (+ x0_11 (* drone_velocity t1_11))))
(assert (= b1_11 (+ b0_11 (* battery_charge_rate_fly t1_11))))
(assert (= s0_q1_11 (+ s0_q0_11 (* queue_data_rate t1_11))))
(assert (= s1_q1_11 (+ s1_q0_11 (* queue_data_rate t1_11))))
(assert (= s2_q1_11 (+ s2_q0_11 (* queue_data_rate t1_11))))


;Collecting data
(assert (= x2_11 x1_11))
(assert (= b2_11 (+ b1_11 (* battery_charge_rate_hover t2_11))))
(assert (=> (= choice_11 0.0) (and (= s0_q2_11 (- s0_q1_11 (* queue_upload_rate t2_11))) (= s1_q2_11 (+ s1_q1_11 (* queue_data_rate t2_11))) (= s2_q2_11 (+ s2_q1_11 (* queue_data_rate t2_11))))))
(assert (=> (= choice_11 1.0) (and (= s1_q2_11 (- s1_q1_11 (* queue_upload_rate t2_11))) (= s0_q2_11 (+ s0_q1_11 (* queue_data_rate t2_11))) (= s2_q2_11 (+ s2_q1_11 (* queue_data_rate t2_11))))))
(assert (=> (= choice_11 2.0) (and (= s2_q2_11 (- s2_q1_11 (* queue_upload_rate t2_11))) (= s0_q2_11 (+ s0_q1_11 (* queue_data_rate t2_11))) (= s1_q2_11 (+ s1_q1_11 (* queue_data_rate t2_11))))))
(assert (=> (= choice_11 0.0) (and (=> (<= s0_q1_11 p12) (= s0_q2_11 s0_q1_11)) (=> (> s0_q1_11 p12) (= s0_q2_11 p12)))))
(assert (=> (= choice_11 1.0) (and (=> (<= s1_q1_11 p13) (= s1_q2_11 s1_q1_11)) (=> (> s1_q1_11 p13) (= s1_q2_11 p13)))))
(assert (=> (= choice_11 2.0) (and (=> (<= s2_q1_11 p14) (= s2_q2_11 s2_q1_11)) (=> (> s2_q1_11 p14) (= s2_q2_11 p14)))))


;flying back
(assert (= x3_11 0))
(assert (= x3_11 (+ x2_11 (- (* drone_velocity t3_11)))))
(assert (= b3_11 (+ b2_11 (* battery_charge_rate_fly t3_11))))
(assert (= s0_q3_11 (+ s0_q2_11 (* queue_data_rate t3_11))))
(assert (= s1_q3_11 (+ s1_q2_11 (* queue_data_rate t3_11))))
(assert (= s2_q3_11 (+ s2_q2_11 (* queue_data_rate t3_11))))

(assert (and (= bc_11 96.6953125) (= s0_qc_11 0.0) (= s1_qc_11 1.015625) (= s2_qc_11 0.0)))

(assert (and (= bi_11 bc_11) (= s0_qi_11 s0_qc_11) (= s1_qi_11 s1_qc_11) (= s2_qi_11 s2_qc_11)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_11 p0) (<= s0_qi_11 p1)) (<= (+ s1_qi_11 p2) s0_qi_11)) (<= (+ s2_qi_11 p3) s0_qi_11)) (and (and (and (>= bi_11 p4) (<= s1_qi_11 p5)) (<= (+ s0_qi_11 p6) s1_qi_11)) (<= (+ s2_qi_11 p7) s1_qi_11))) (and (and (and (>= bi_11 p8) (<= s2_qi_11 p9)) (<= (+ s1_qi_11 p10) s2_qi_11)) (<= (+ s0_qi_11 p11) s2_qi_11)))(and (and (> b0_11 0.0) (> b1_11 0.0) (> b2_11 0.0) (> b3_11 0.0) (< s0_q0_11 100.0) (< s0_q1_11 100.0) (< s0_q2_11 100.0) (< s0_q3_11 100.0) (< s1_q0_11 100.0) (< s1_q1_11 100.0) (< s1_q2_11 100.0) (< s1_q3_11 100.0) (< s2_q0_11 100.0) (< s2_q1_11 100.0) (< s2_q2_11 100.0) (< s2_q3_11 100.0))(or (or (and (and (and (>= b3_11 p0) (<= s0_q3_11 p1)) (<= (+ s1_q3_11 p2) s0_q3_11)) (<= (+ s2_q3_11 p3) s0_q3_11)) (and (and (and (>= b3_11 p4) (<= s1_q3_11 p5)) (<= (+ s0_q3_11 p6) s1_q3_11)) (<= (+ s2_q3_11 p7) s1_q3_11))) (and (and (and (>= b3_11 p8) (<= s2_q3_11 p9)) (<= (+ s1_q3_11 p10) s2_q3_11)) (<= (+ s0_q3_11 p11) s2_q3_11))))))

(declare-fun x0_10 () Real)
(declare-fun x1_10 () Real)
(declare-fun x2_10 () Real)
(declare-fun x3_10 () Real)
(declare-fun bi_10 () Real)
(declare-fun b0_10 () Real)
(declare-fun b1_10 () Real)
(declare-fun b2_10 () Real)
(declare-fun b3_10 () Real)
(declare-fun s0_qi_10 () Real)
(declare-fun s0_q0_10 () Real)
(declare-fun s0_q1_10 () Real)
(declare-fun s0_q2_10 () Real)
(declare-fun s0_q3_10 () Real)
(declare-fun s1_qi_10 () Real)
(declare-fun s1_q0_10 () Real)
(declare-fun s1_q1_10 () Real)
(declare-fun s1_q2_10 () Real)
(declare-fun s1_q3_10 () Real)
(declare-fun s2_qi_10 () Real)
(declare-fun s2_q0_10 () Real)
(declare-fun s2_q1_10 () Real)
(declare-fun s2_q2_10 () Real)
(declare-fun s2_q3_10 () Real)
(declare-fun t0_10 () Real)
(declare-fun t1_10 () Real)
(declare-fun t2_10 () Real)
(declare-fun t3_10 () Real)
(declare-fun bc_10 () Real)
(declare-fun s0_qc_10 () Real)
(declare-fun s1_qc_10 () Real)
(declare-fun s2_qc_10 () Real)
(assert (>= t0_10 0.0))
(assert (>= t1_10 0.0))
(assert (>= t2_10 0.0))
(assert (>= t3_10 0.0))
(assert (<= bi_10 100.0))
(assert (<= b0_10 100.0))
(assert (<= b1_10 100.0))
(assert (<= b2_10 100.0))
(assert (<= b3_10 100.0))
(assert (>= s0_qi_10 0.0))
(assert (>= s0_q0_10 0.0))
(assert (>= s0_q1_10 0.0))
(assert (>= s0_q2_10 0.0))
(assert (>= s0_q3_10 0.0))
(assert (>= s1_qi_10 0.0))
(assert (>= s1_q0_10 0.0))
(assert (>= s1_q1_10 0.0))
(assert (>= s1_q2_10 0.0))
(assert (>= s1_q3_10 0.0))
(assert (>= s2_qi_10 0.0))
(assert (>= s2_q0_10 0.0))
(assert (>= s2_q1_10 0.0))
(assert (>= s2_q2_10 0.0))
(assert (>= s2_q3_10 0.0))
(assert (<= s0_qi_10 100.0))
(assert (<= s1_qi_10 100.0))
(declare-fun choice_10 () Real)
(assert (or (= choice_10 0.0) (= choice_10 1.0) (= choice_10 2.0)))


;charging
(assert (= x0_10 0))
(assert (= b0_10 (+ bi_10 (* battery_charging_rate t0_10))))
(assert (= s0_q0_10 (+ s0_qi_10 (* queue_data_rate t0_10))))
(assert (= s1_q0_10 (+ s1_qi_10 (* queue_data_rate t0_10))))
(assert (= s2_q0_10 (+ s2_qi_10 (* queue_data_rate t0_10))))
(assert (and (=> (>= bi_10 p15) (= b0_10 bi_10)) (=> (< bi_10 p15) (= b0_10 p15))))
(assert (=> (and (and (and (>= bi_10 p0) (<= s0_qi_10 p1)) (<= (+ s1_qi_10 p2) s0_qi_10)) (<= (+ s2_qi_10 p3) s0_qi_10)) (= choice_10 0.0)))
(assert (=> (and (not (and (and (and (>= bi_10 p0) (<= s0_qi_10 p1)) (<= (+ s1_qi_10 p2) s0_qi_10)) (<= (+ s2_qi_10 p3) s0_qi_10))) (and (and (and (>= bi_10 p4) (<= s1_qi_10 p5)) (<= (+ s0_qi_10 p6) s1_qi_10)) (<= (+ s2_qi_10 p7) s1_qi_10))) (= choice_10 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_10 p0) (<= s0_qi_10 p1)) (<= (+ s1_qi_10 p2) s0_qi_10)) (<= (+ s2_qi_10 p3) s0_qi_10))) (not (and (and (and (>= bi_10 p4) (<= s1_qi_10 p5)) (<= (+ s0_qi_10 p6) s1_qi_10)) (<= (+ s2_qi_10 p7) s1_qi_10)))) (and (and (and (>= bi_10 p8) (<= s2_qi_10 p9)) (<= (+ s1_qi_10 p10) s2_qi_10)) (<= (+ s0_qi_10 p11) s2_qi_10))) (= choice_10 2.0)))


;flying to sensors
(assert (=> (= choice_10 0.0) (= x1_10 s0_loc)))
(assert (=> (= choice_10 1.0) (= x1_10 s1_loc)))
(assert (=> (= choice_10 2.0) (= x1_10 s2_loc)))
(assert (= x1_10 (+ x0_10 (* drone_velocity t1_10))))
(assert (= b1_10 (+ b0_10 (* battery_charge_rate_fly t1_10))))
(assert (= s0_q1_10 (+ s0_q0_10 (* queue_data_rate t1_10))))
(assert (= s1_q1_10 (+ s1_q0_10 (* queue_data_rate t1_10))))
(assert (= s2_q1_10 (+ s2_q0_10 (* queue_data_rate t1_10))))


;Collecting data
(assert (= x2_10 x1_10))
(assert (= b2_10 (+ b1_10 (* battery_charge_rate_hover t2_10))))
(assert (=> (= choice_10 0.0) (and (= s0_q2_10 (- s0_q1_10 (* queue_upload_rate t2_10))) (= s1_q2_10 (+ s1_q1_10 (* queue_data_rate t2_10))) (= s2_q2_10 (+ s2_q1_10 (* queue_data_rate t2_10))))))
(assert (=> (= choice_10 1.0) (and (= s1_q2_10 (- s1_q1_10 (* queue_upload_rate t2_10))) (= s0_q2_10 (+ s0_q1_10 (* queue_data_rate t2_10))) (= s2_q2_10 (+ s2_q1_10 (* queue_data_rate t2_10))))))
(assert (=> (= choice_10 2.0) (and (= s2_q2_10 (- s2_q1_10 (* queue_upload_rate t2_10))) (= s0_q2_10 (+ s0_q1_10 (* queue_data_rate t2_10))) (= s1_q2_10 (+ s1_q1_10 (* queue_data_rate t2_10))))))
(assert (=> (= choice_10 0.0) (and (=> (<= s0_q1_10 p12) (= s0_q2_10 s0_q1_10)) (=> (> s0_q1_10 p12) (= s0_q2_10 p12)))))
(assert (=> (= choice_10 1.0) (and (=> (<= s1_q1_10 p13) (= s1_q2_10 s1_q1_10)) (=> (> s1_q1_10 p13) (= s1_q2_10 p13)))))
(assert (=> (= choice_10 2.0) (and (=> (<= s2_q1_10 p14) (= s2_q2_10 s2_q1_10)) (=> (> s2_q1_10 p14) (= s2_q2_10 p14)))))


;flying back
(assert (= x3_10 0))
(assert (= x3_10 (+ x2_10 (- (* drone_velocity t3_10)))))
(assert (= b3_10 (+ b2_10 (* battery_charge_rate_fly t3_10))))
(assert (= s0_q3_10 (+ s0_q2_10 (* queue_data_rate t3_10))))
(assert (= s1_q3_10 (+ s1_q2_10 (* queue_data_rate t3_10))))
(assert (= s2_q3_10 (+ s2_q2_10 (* queue_data_rate t3_10))))

(assert (and (= bc_10 96.890625) (= s0_qc_10 0.0) (= s1_qc_10 1.0) (= s2_qc_10 0.0)))

(assert (and (= bi_10 bc_10) (= s0_qi_10 s0_qc_10) (= s1_qi_10 s1_qc_10) (= s2_qi_10 s2_qc_10)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_10 p0) (<= s0_qi_10 p1)) (<= (+ s1_qi_10 p2) s0_qi_10)) (<= (+ s2_qi_10 p3) s0_qi_10)) (and (and (and (>= bi_10 p4) (<= s1_qi_10 p5)) (<= (+ s0_qi_10 p6) s1_qi_10)) (<= (+ s2_qi_10 p7) s1_qi_10))) (and (and (and (>= bi_10 p8) (<= s2_qi_10 p9)) (<= (+ s1_qi_10 p10) s2_qi_10)) (<= (+ s0_qi_10 p11) s2_qi_10)))(and (and (> b0_10 0.0) (> b1_10 0.0) (> b2_10 0.0) (> b3_10 0.0) (< s0_q0_10 100.0) (< s0_q1_10 100.0) (< s0_q2_10 100.0) (< s0_q3_10 100.0) (< s1_q0_10 100.0) (< s1_q1_10 100.0) (< s1_q2_10 100.0) (< s1_q3_10 100.0) (< s2_q0_10 100.0) (< s2_q1_10 100.0) (< s2_q2_10 100.0) (< s2_q3_10 100.0))(or (or (and (and (and (>= b3_10 p0) (<= s0_q3_10 p1)) (<= (+ s1_q3_10 p2) s0_q3_10)) (<= (+ s2_q3_10 p3) s0_q3_10)) (and (and (and (>= b3_10 p4) (<= s1_q3_10 p5)) (<= (+ s0_q3_10 p6) s1_q3_10)) (<= (+ s2_q3_10 p7) s1_q3_10))) (and (and (and (>= b3_10 p8) (<= s2_q3_10 p9)) (<= (+ s1_q3_10 p10) s2_q3_10)) (<= (+ s0_q3_10 p11) s2_q3_10))))))

(declare-fun x0_9 () Real)
(declare-fun x1_9 () Real)
(declare-fun x2_9 () Real)
(declare-fun x3_9 () Real)
(declare-fun bi_9 () Real)
(declare-fun b0_9 () Real)
(declare-fun b1_9 () Real)
(declare-fun b2_9 () Real)
(declare-fun b3_9 () Real)
(declare-fun s0_qi_9 () Real)
(declare-fun s0_q0_9 () Real)
(declare-fun s0_q1_9 () Real)
(declare-fun s0_q2_9 () Real)
(declare-fun s0_q3_9 () Real)
(declare-fun s1_qi_9 () Real)
(declare-fun s1_q0_9 () Real)
(declare-fun s1_q1_9 () Real)
(declare-fun s1_q2_9 () Real)
(declare-fun s1_q3_9 () Real)
(declare-fun s2_qi_9 () Real)
(declare-fun s2_q0_9 () Real)
(declare-fun s2_q1_9 () Real)
(declare-fun s2_q2_9 () Real)
(declare-fun s2_q3_9 () Real)
(declare-fun t0_9 () Real)
(declare-fun t1_9 () Real)
(declare-fun t2_9 () Real)
(declare-fun t3_9 () Real)
(declare-fun bc_9 () Real)
(declare-fun s0_qc_9 () Real)
(declare-fun s1_qc_9 () Real)
(declare-fun s2_qc_9 () Real)
(assert (>= t0_9 0.0))
(assert (>= t1_9 0.0))
(assert (>= t2_9 0.0))
(assert (>= t3_9 0.0))
(assert (<= bi_9 100.0))
(assert (<= b0_9 100.0))
(assert (<= b1_9 100.0))
(assert (<= b2_9 100.0))
(assert (<= b3_9 100.0))
(assert (>= s0_qi_9 0.0))
(assert (>= s0_q0_9 0.0))
(assert (>= s0_q1_9 0.0))
(assert (>= s0_q2_9 0.0))
(assert (>= s0_q3_9 0.0))
(assert (>= s1_qi_9 0.0))
(assert (>= s1_q0_9 0.0))
(assert (>= s1_q1_9 0.0))
(assert (>= s1_q2_9 0.0))
(assert (>= s1_q3_9 0.0))
(assert (>= s2_qi_9 0.0))
(assert (>= s2_q0_9 0.0))
(assert (>= s2_q1_9 0.0))
(assert (>= s2_q2_9 0.0))
(assert (>= s2_q3_9 0.0))
(assert (<= s0_qi_9 100.0))
(assert (<= s1_qi_9 100.0))
(declare-fun choice_9 () Real)
(assert (or (= choice_9 0.0) (= choice_9 1.0) (= choice_9 2.0)))


;charging
(assert (= x0_9 0))
(assert (= b0_9 (+ bi_9 (* battery_charging_rate t0_9))))
(assert (= s0_q0_9 (+ s0_qi_9 (* queue_data_rate t0_9))))
(assert (= s1_q0_9 (+ s1_qi_9 (* queue_data_rate t0_9))))
(assert (= s2_q0_9 (+ s2_qi_9 (* queue_data_rate t0_9))))
(assert (and (=> (>= bi_9 p15) (= b0_9 bi_9)) (=> (< bi_9 p15) (= b0_9 p15))))
(assert (=> (and (and (and (>= bi_9 p0) (<= s0_qi_9 p1)) (<= (+ s1_qi_9 p2) s0_qi_9)) (<= (+ s2_qi_9 p3) s0_qi_9)) (= choice_9 0.0)))
(assert (=> (and (not (and (and (and (>= bi_9 p0) (<= s0_qi_9 p1)) (<= (+ s1_qi_9 p2) s0_qi_9)) (<= (+ s2_qi_9 p3) s0_qi_9))) (and (and (and (>= bi_9 p4) (<= s1_qi_9 p5)) (<= (+ s0_qi_9 p6) s1_qi_9)) (<= (+ s2_qi_9 p7) s1_qi_9))) (= choice_9 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_9 p0) (<= s0_qi_9 p1)) (<= (+ s1_qi_9 p2) s0_qi_9)) (<= (+ s2_qi_9 p3) s0_qi_9))) (not (and (and (and (>= bi_9 p4) (<= s1_qi_9 p5)) (<= (+ s0_qi_9 p6) s1_qi_9)) (<= (+ s2_qi_9 p7) s1_qi_9)))) (and (and (and (>= bi_9 p8) (<= s2_qi_9 p9)) (<= (+ s1_qi_9 p10) s2_qi_9)) (<= (+ s0_qi_9 p11) s2_qi_9))) (= choice_9 2.0)))


;flying to sensors
(assert (=> (= choice_9 0.0) (= x1_9 s0_loc)))
(assert (=> (= choice_9 1.0) (= x1_9 s1_loc)))
(assert (=> (= choice_9 2.0) (= x1_9 s2_loc)))
(assert (= x1_9 (+ x0_9 (* drone_velocity t1_9))))
(assert (= b1_9 (+ b0_9 (* battery_charge_rate_fly t1_9))))
(assert (= s0_q1_9 (+ s0_q0_9 (* queue_data_rate t1_9))))
(assert (= s1_q1_9 (+ s1_q0_9 (* queue_data_rate t1_9))))
(assert (= s2_q1_9 (+ s2_q0_9 (* queue_data_rate t1_9))))


;Collecting data
(assert (= x2_9 x1_9))
(assert (= b2_9 (+ b1_9 (* battery_charge_rate_hover t2_9))))
(assert (=> (= choice_9 0.0) (and (= s0_q2_9 (- s0_q1_9 (* queue_upload_rate t2_9))) (= s1_q2_9 (+ s1_q1_9 (* queue_data_rate t2_9))) (= s2_q2_9 (+ s2_q1_9 (* queue_data_rate t2_9))))))
(assert (=> (= choice_9 1.0) (and (= s1_q2_9 (- s1_q1_9 (* queue_upload_rate t2_9))) (= s0_q2_9 (+ s0_q1_9 (* queue_data_rate t2_9))) (= s2_q2_9 (+ s2_q1_9 (* queue_data_rate t2_9))))))
(assert (=> (= choice_9 2.0) (and (= s2_q2_9 (- s2_q1_9 (* queue_upload_rate t2_9))) (= s0_q2_9 (+ s0_q1_9 (* queue_data_rate t2_9))) (= s1_q2_9 (+ s1_q1_9 (* queue_data_rate t2_9))))))
(assert (=> (= choice_9 0.0) (and (=> (<= s0_q1_9 p12) (= s0_q2_9 s0_q1_9)) (=> (> s0_q1_9 p12) (= s0_q2_9 p12)))))
(assert (=> (= choice_9 1.0) (and (=> (<= s1_q1_9 p13) (= s1_q2_9 s1_q1_9)) (=> (> s1_q1_9 p13) (= s1_q2_9 p13)))))
(assert (=> (= choice_9 2.0) (and (=> (<= s2_q1_9 p14) (= s2_q2_9 s2_q1_9)) (=> (> s2_q1_9 p14) (= s2_q2_9 p14)))))


;flying back
(assert (= x3_9 0))
(assert (= x3_9 (+ x2_9 (- (* drone_velocity t3_9)))))
(assert (= b3_9 (+ b2_9 (* battery_charge_rate_fly t3_9))))
(assert (= s0_q3_9 (+ s0_q2_9 (* queue_data_rate t3_9))))
(assert (= s1_q3_9 (+ s1_q2_9 (* queue_data_rate t3_9))))
(assert (= s2_q3_9 (+ s2_q2_9 (* queue_data_rate t3_9))))

(assert (and (= bc_9 99.625) (= s0_qc_9 0.0) (= s1_qc_9 0.25) (= s2_qc_9 0.0)))

(assert (and (= bi_9 bc_9) (= s0_qi_9 s0_qc_9) (= s1_qi_9 s1_qc_9) (= s2_qi_9 s2_qc_9)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_9 p0) (<= s0_qi_9 p1)) (<= (+ s1_qi_9 p2) s0_qi_9)) (<= (+ s2_qi_9 p3) s0_qi_9)) (and (and (and (>= bi_9 p4) (<= s1_qi_9 p5)) (<= (+ s0_qi_9 p6) s1_qi_9)) (<= (+ s2_qi_9 p7) s1_qi_9))) (and (and (and (>= bi_9 p8) (<= s2_qi_9 p9)) (<= (+ s1_qi_9 p10) s2_qi_9)) (<= (+ s0_qi_9 p11) s2_qi_9)))(and (and (> b0_9 0.0) (> b1_9 0.0) (> b2_9 0.0) (> b3_9 0.0) (< s0_q0_9 100.0) (< s0_q1_9 100.0) (< s0_q2_9 100.0) (< s0_q3_9 100.0) (< s1_q0_9 100.0) (< s1_q1_9 100.0) (< s1_q2_9 100.0) (< s1_q3_9 100.0) (< s2_q0_9 100.0) (< s2_q1_9 100.0) (< s2_q2_9 100.0) (< s2_q3_9 100.0))(or (or (and (and (and (>= b3_9 p0) (<= s0_q3_9 p1)) (<= (+ s1_q3_9 p2) s0_q3_9)) (<= (+ s2_q3_9 p3) s0_q3_9)) (and (and (and (>= b3_9 p4) (<= s1_q3_9 p5)) (<= (+ s0_q3_9 p6) s1_q3_9)) (<= (+ s2_q3_9 p7) s1_q3_9))) (and (and (and (>= b3_9 p8) (<= s2_q3_9 p9)) (<= (+ s1_q3_9 p10) s2_q3_9)) (<= (+ s0_q3_9 p11) s2_q3_9))))))

(declare-fun x0_8 () Real)
(declare-fun x1_8 () Real)
(declare-fun x2_8 () Real)
(declare-fun x3_8 () Real)
(declare-fun bi_8 () Real)
(declare-fun b0_8 () Real)
(declare-fun b1_8 () Real)
(declare-fun b2_8 () Real)
(declare-fun b3_8 () Real)
(declare-fun s0_qi_8 () Real)
(declare-fun s0_q0_8 () Real)
(declare-fun s0_q1_8 () Real)
(declare-fun s0_q2_8 () Real)
(declare-fun s0_q3_8 () Real)
(declare-fun s1_qi_8 () Real)
(declare-fun s1_q0_8 () Real)
(declare-fun s1_q1_8 () Real)
(declare-fun s1_q2_8 () Real)
(declare-fun s1_q3_8 () Real)
(declare-fun s2_qi_8 () Real)
(declare-fun s2_q0_8 () Real)
(declare-fun s2_q1_8 () Real)
(declare-fun s2_q2_8 () Real)
(declare-fun s2_q3_8 () Real)
(declare-fun t0_8 () Real)
(declare-fun t1_8 () Real)
(declare-fun t2_8 () Real)
(declare-fun t3_8 () Real)
(declare-fun bc_8 () Real)
(declare-fun s0_qc_8 () Real)
(declare-fun s1_qc_8 () Real)
(declare-fun s2_qc_8 () Real)
(assert (>= t0_8 0.0))
(assert (>= t1_8 0.0))
(assert (>= t2_8 0.0))
(assert (>= t3_8 0.0))
(assert (<= bi_8 100.0))
(assert (<= b0_8 100.0))
(assert (<= b1_8 100.0))
(assert (<= b2_8 100.0))
(assert (<= b3_8 100.0))
(assert (>= s0_qi_8 0.0))
(assert (>= s0_q0_8 0.0))
(assert (>= s0_q1_8 0.0))
(assert (>= s0_q2_8 0.0))
(assert (>= s0_q3_8 0.0))
(assert (>= s1_qi_8 0.0))
(assert (>= s1_q0_8 0.0))
(assert (>= s1_q1_8 0.0))
(assert (>= s1_q2_8 0.0))
(assert (>= s1_q3_8 0.0))
(assert (>= s2_qi_8 0.0))
(assert (>= s2_q0_8 0.0))
(assert (>= s2_q1_8 0.0))
(assert (>= s2_q2_8 0.0))
(assert (>= s2_q3_8 0.0))
(assert (<= s0_qi_8 100.0))
(assert (<= s1_qi_8 100.0))
(declare-fun choice_8 () Real)
(assert (or (= choice_8 0.0) (= choice_8 1.0) (= choice_8 2.0)))


;charging
(assert (= x0_8 0))
(assert (= b0_8 (+ bi_8 (* battery_charging_rate t0_8))))
(assert (= s0_q0_8 (+ s0_qi_8 (* queue_data_rate t0_8))))
(assert (= s1_q0_8 (+ s1_qi_8 (* queue_data_rate t0_8))))
(assert (= s2_q0_8 (+ s2_qi_8 (* queue_data_rate t0_8))))
(assert (and (=> (>= bi_8 p15) (= b0_8 bi_8)) (=> (< bi_8 p15) (= b0_8 p15))))
(assert (=> (and (and (and (>= bi_8 p0) (<= s0_qi_8 p1)) (<= (+ s1_qi_8 p2) s0_qi_8)) (<= (+ s2_qi_8 p3) s0_qi_8)) (= choice_8 0.0)))
(assert (=> (and (not (and (and (and (>= bi_8 p0) (<= s0_qi_8 p1)) (<= (+ s1_qi_8 p2) s0_qi_8)) (<= (+ s2_qi_8 p3) s0_qi_8))) (and (and (and (>= bi_8 p4) (<= s1_qi_8 p5)) (<= (+ s0_qi_8 p6) s1_qi_8)) (<= (+ s2_qi_8 p7) s1_qi_8))) (= choice_8 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_8 p0) (<= s0_qi_8 p1)) (<= (+ s1_qi_8 p2) s0_qi_8)) (<= (+ s2_qi_8 p3) s0_qi_8))) (not (and (and (and (>= bi_8 p4) (<= s1_qi_8 p5)) (<= (+ s0_qi_8 p6) s1_qi_8)) (<= (+ s2_qi_8 p7) s1_qi_8)))) (and (and (and (>= bi_8 p8) (<= s2_qi_8 p9)) (<= (+ s1_qi_8 p10) s2_qi_8)) (<= (+ s0_qi_8 p11) s2_qi_8))) (= choice_8 2.0)))


;flying to sensors
(assert (=> (= choice_8 0.0) (= x1_8 s0_loc)))
(assert (=> (= choice_8 1.0) (= x1_8 s1_loc)))
(assert (=> (= choice_8 2.0) (= x1_8 s2_loc)))
(assert (= x1_8 (+ x0_8 (* drone_velocity t1_8))))
(assert (= b1_8 (+ b0_8 (* battery_charge_rate_fly t1_8))))
(assert (= s0_q1_8 (+ s0_q0_8 (* queue_data_rate t1_8))))
(assert (= s1_q1_8 (+ s1_q0_8 (* queue_data_rate t1_8))))
(assert (= s2_q1_8 (+ s2_q0_8 (* queue_data_rate t1_8))))


;Collecting data
(assert (= x2_8 x1_8))
(assert (= b2_8 (+ b1_8 (* battery_charge_rate_hover t2_8))))
(assert (=> (= choice_8 0.0) (and (= s0_q2_8 (- s0_q1_8 (* queue_upload_rate t2_8))) (= s1_q2_8 (+ s1_q1_8 (* queue_data_rate t2_8))) (= s2_q2_8 (+ s2_q1_8 (* queue_data_rate t2_8))))))
(assert (=> (= choice_8 1.0) (and (= s1_q2_8 (- s1_q1_8 (* queue_upload_rate t2_8))) (= s0_q2_8 (+ s0_q1_8 (* queue_data_rate t2_8))) (= s2_q2_8 (+ s2_q1_8 (* queue_data_rate t2_8))))))
(assert (=> (= choice_8 2.0) (and (= s2_q2_8 (- s2_q1_8 (* queue_upload_rate t2_8))) (= s0_q2_8 (+ s0_q1_8 (* queue_data_rate t2_8))) (= s1_q2_8 (+ s1_q1_8 (* queue_data_rate t2_8))))))
(assert (=> (= choice_8 0.0) (and (=> (<= s0_q1_8 p12) (= s0_q2_8 s0_q1_8)) (=> (> s0_q1_8 p12) (= s0_q2_8 p12)))))
(assert (=> (= choice_8 1.0) (and (=> (<= s1_q1_8 p13) (= s1_q2_8 s1_q1_8)) (=> (> s1_q1_8 p13) (= s1_q2_8 p13)))))
(assert (=> (= choice_8 2.0) (and (=> (<= s2_q1_8 p14) (= s2_q2_8 s2_q1_8)) (=> (> s2_q1_8 p14) (= s2_q2_8 p14)))))


;flying back
(assert (= x3_8 0))
(assert (= x3_8 (+ x2_8 (- (* drone_velocity t3_8)))))
(assert (= b3_8 (+ b2_8 (* battery_charge_rate_fly t3_8))))
(assert (= s0_q3_8 (+ s0_q2_8 (* queue_data_rate t3_8))))
(assert (= s1_q3_8 (+ s1_q2_8 (* queue_data_rate t3_8))))
(assert (= s2_q3_8 (+ s2_q2_8 (* queue_data_rate t3_8))))

(assert (and (= bc_8 96.5) (= s0_qc_8 1.9411143125) (= s1_qc_8 2.440985125) (= s2_qc_8 1.940985125)))

(assert (and (= bi_8 bc_8) (= s0_qi_8 s0_qc_8) (= s1_qi_8 s1_qc_8) (= s2_qi_8 s2_qc_8)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_8 p0) (<= s0_qi_8 p1)) (<= (+ s1_qi_8 p2) s0_qi_8)) (<= (+ s2_qi_8 p3) s0_qi_8)) (and (and (and (>= bi_8 p4) (<= s1_qi_8 p5)) (<= (+ s0_qi_8 p6) s1_qi_8)) (<= (+ s2_qi_8 p7) s1_qi_8))) (and (and (and (>= bi_8 p8) (<= s2_qi_8 p9)) (<= (+ s1_qi_8 p10) s2_qi_8)) (<= (+ s0_qi_8 p11) s2_qi_8)))(and (and (> b0_8 0.0) (> b1_8 0.0) (> b2_8 0.0) (> b3_8 0.0) (< s0_q0_8 100.0) (< s0_q1_8 100.0) (< s0_q2_8 100.0) (< s0_q3_8 100.0) (< s1_q0_8 100.0) (< s1_q1_8 100.0) (< s1_q2_8 100.0) (< s1_q3_8 100.0) (< s2_q0_8 100.0) (< s2_q1_8 100.0) (< s2_q2_8 100.0) (< s2_q3_8 100.0))(or (or (and (and (and (>= b3_8 p0) (<= s0_q3_8 p1)) (<= (+ s1_q3_8 p2) s0_q3_8)) (<= (+ s2_q3_8 p3) s0_q3_8)) (and (and (and (>= b3_8 p4) (<= s1_q3_8 p5)) (<= (+ s0_q3_8 p6) s1_q3_8)) (<= (+ s2_q3_8 p7) s1_q3_8))) (and (and (and (>= b3_8 p8) (<= s2_q3_8 p9)) (<= (+ s1_q3_8 p10) s2_q3_8)) (<= (+ s0_q3_8 p11) s2_q3_8))))))

(declare-fun x0_7 () Real)
(declare-fun x1_7 () Real)
(declare-fun x2_7 () Real)
(declare-fun x3_7 () Real)
(declare-fun bi_7 () Real)
(declare-fun b0_7 () Real)
(declare-fun b1_7 () Real)
(declare-fun b2_7 () Real)
(declare-fun b3_7 () Real)
(declare-fun s0_qi_7 () Real)
(declare-fun s0_q0_7 () Real)
(declare-fun s0_q1_7 () Real)
(declare-fun s0_q2_7 () Real)
(declare-fun s0_q3_7 () Real)
(declare-fun s1_qi_7 () Real)
(declare-fun s1_q0_7 () Real)
(declare-fun s1_q1_7 () Real)
(declare-fun s1_q2_7 () Real)
(declare-fun s1_q3_7 () Real)
(declare-fun s2_qi_7 () Real)
(declare-fun s2_q0_7 () Real)
(declare-fun s2_q1_7 () Real)
(declare-fun s2_q2_7 () Real)
(declare-fun s2_q3_7 () Real)
(declare-fun t0_7 () Real)
(declare-fun t1_7 () Real)
(declare-fun t2_7 () Real)
(declare-fun t3_7 () Real)
(declare-fun bc_7 () Real)
(declare-fun s0_qc_7 () Real)
(declare-fun s1_qc_7 () Real)
(declare-fun s2_qc_7 () Real)
(assert (>= t0_7 0.0))
(assert (>= t1_7 0.0))
(assert (>= t2_7 0.0))
(assert (>= t3_7 0.0))
(assert (<= bi_7 100.0))
(assert (<= b0_7 100.0))
(assert (<= b1_7 100.0))
(assert (<= b2_7 100.0))
(assert (<= b3_7 100.0))
(assert (>= s0_qi_7 0.0))
(assert (>= s0_q0_7 0.0))
(assert (>= s0_q1_7 0.0))
(assert (>= s0_q2_7 0.0))
(assert (>= s0_q3_7 0.0))
(assert (>= s1_qi_7 0.0))
(assert (>= s1_q0_7 0.0))
(assert (>= s1_q1_7 0.0))
(assert (>= s1_q2_7 0.0))
(assert (>= s1_q3_7 0.0))
(assert (>= s2_qi_7 0.0))
(assert (>= s2_q0_7 0.0))
(assert (>= s2_q1_7 0.0))
(assert (>= s2_q2_7 0.0))
(assert (>= s2_q3_7 0.0))
(assert (<= s0_qi_7 100.0))
(assert (<= s1_qi_7 100.0))
(declare-fun choice_7 () Real)
(assert (or (= choice_7 0.0) (= choice_7 1.0) (= choice_7 2.0)))


;charging
(assert (= x0_7 0))
(assert (= b0_7 (+ bi_7 (* battery_charging_rate t0_7))))
(assert (= s0_q0_7 (+ s0_qi_7 (* queue_data_rate t0_7))))
(assert (= s1_q0_7 (+ s1_qi_7 (* queue_data_rate t0_7))))
(assert (= s2_q0_7 (+ s2_qi_7 (* queue_data_rate t0_7))))
(assert (and (=> (>= bi_7 p15) (= b0_7 bi_7)) (=> (< bi_7 p15) (= b0_7 p15))))
(assert (=> (and (and (and (>= bi_7 p0) (<= s0_qi_7 p1)) (<= (+ s1_qi_7 p2) s0_qi_7)) (<= (+ s2_qi_7 p3) s0_qi_7)) (= choice_7 0.0)))
(assert (=> (and (not (and (and (and (>= bi_7 p0) (<= s0_qi_7 p1)) (<= (+ s1_qi_7 p2) s0_qi_7)) (<= (+ s2_qi_7 p3) s0_qi_7))) (and (and (and (>= bi_7 p4) (<= s1_qi_7 p5)) (<= (+ s0_qi_7 p6) s1_qi_7)) (<= (+ s2_qi_7 p7) s1_qi_7))) (= choice_7 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_7 p0) (<= s0_qi_7 p1)) (<= (+ s1_qi_7 p2) s0_qi_7)) (<= (+ s2_qi_7 p3) s0_qi_7))) (not (and (and (and (>= bi_7 p4) (<= s1_qi_7 p5)) (<= (+ s0_qi_7 p6) s1_qi_7)) (<= (+ s2_qi_7 p7) s1_qi_7)))) (and (and (and (>= bi_7 p8) (<= s2_qi_7 p9)) (<= (+ s1_qi_7 p10) s2_qi_7)) (<= (+ s0_qi_7 p11) s2_qi_7))) (= choice_7 2.0)))


;flying to sensors
(assert (=> (= choice_7 0.0) (= x1_7 s0_loc)))
(assert (=> (= choice_7 1.0) (= x1_7 s1_loc)))
(assert (=> (= choice_7 2.0) (= x1_7 s2_loc)))
(assert (= x1_7 (+ x0_7 (* drone_velocity t1_7))))
(assert (= b1_7 (+ b0_7 (* battery_charge_rate_fly t1_7))))
(assert (= s0_q1_7 (+ s0_q0_7 (* queue_data_rate t1_7))))
(assert (= s1_q1_7 (+ s1_q0_7 (* queue_data_rate t1_7))))
(assert (= s2_q1_7 (+ s2_q0_7 (* queue_data_rate t1_7))))


;Collecting data
(assert (= x2_7 x1_7))
(assert (= b2_7 (+ b1_7 (* battery_charge_rate_hover t2_7))))
(assert (=> (= choice_7 0.0) (and (= s0_q2_7 (- s0_q1_7 (* queue_upload_rate t2_7))) (= s1_q2_7 (+ s1_q1_7 (* queue_data_rate t2_7))) (= s2_q2_7 (+ s2_q1_7 (* queue_data_rate t2_7))))))
(assert (=> (= choice_7 1.0) (and (= s1_q2_7 (- s1_q1_7 (* queue_upload_rate t2_7))) (= s0_q2_7 (+ s0_q1_7 (* queue_data_rate t2_7))) (= s2_q2_7 (+ s2_q1_7 (* queue_data_rate t2_7))))))
(assert (=> (= choice_7 2.0) (and (= s2_q2_7 (- s2_q1_7 (* queue_upload_rate t2_7))) (= s0_q2_7 (+ s0_q1_7 (* queue_data_rate t2_7))) (= s1_q2_7 (+ s1_q1_7 (* queue_data_rate t2_7))))))
(assert (=> (= choice_7 0.0) (and (=> (<= s0_q1_7 p12) (= s0_q2_7 s0_q1_7)) (=> (> s0_q1_7 p12) (= s0_q2_7 p12)))))
(assert (=> (= choice_7 1.0) (and (=> (<= s1_q1_7 p13) (= s1_q2_7 s1_q1_7)) (=> (> s1_q1_7 p13) (= s1_q2_7 p13)))))
(assert (=> (= choice_7 2.0) (and (=> (<= s2_q1_7 p14) (= s2_q2_7 s2_q1_7)) (=> (> s2_q1_7 p14) (= s2_q2_7 p14)))))


;flying back
(assert (= x3_7 0))
(assert (= x3_7 (+ x2_7 (- (* drone_velocity t3_7)))))
(assert (= b3_7 (+ b2_7 (* battery_charge_rate_fly t3_7))))
(assert (= s0_q3_7 (+ s0_q2_7 (* queue_data_rate t3_7))))
(assert (= s1_q3_7 (+ s1_q2_7 (* queue_data_rate t3_7))))
(assert (= s2_q3_7 (+ s2_q2_7 (* queue_data_rate t3_7))))

(assert (and (= bc_7 84.0) (= s0_qc_7 0.0) (= s1_qc_7 1.0) (= s2_qc_7 1.0)))

(assert (and (= bi_7 bc_7) (= s0_qi_7 s0_qc_7) (= s1_qi_7 s1_qc_7) (= s2_qi_7 s2_qc_7)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_7 p0) (<= s0_qi_7 p1)) (<= (+ s1_qi_7 p2) s0_qi_7)) (<= (+ s2_qi_7 p3) s0_qi_7)) (and (and (and (>= bi_7 p4) (<= s1_qi_7 p5)) (<= (+ s0_qi_7 p6) s1_qi_7)) (<= (+ s2_qi_7 p7) s1_qi_7))) (and (and (and (>= bi_7 p8) (<= s2_qi_7 p9)) (<= (+ s1_qi_7 p10) s2_qi_7)) (<= (+ s0_qi_7 p11) s2_qi_7)))(and (and (> b0_7 0.0) (> b1_7 0.0) (> b2_7 0.0) (> b3_7 0.0) (< s0_q0_7 100.0) (< s0_q1_7 100.0) (< s0_q2_7 100.0) (< s0_q3_7 100.0) (< s1_q0_7 100.0) (< s1_q1_7 100.0) (< s1_q2_7 100.0) (< s1_q3_7 100.0) (< s2_q0_7 100.0) (< s2_q1_7 100.0) (< s2_q2_7 100.0) (< s2_q3_7 100.0))(or (or (and (and (and (>= b3_7 p0) (<= s0_q3_7 p1)) (<= (+ s1_q3_7 p2) s0_q3_7)) (<= (+ s2_q3_7 p3) s0_q3_7)) (and (and (and (>= b3_7 p4) (<= s1_q3_7 p5)) (<= (+ s0_q3_7 p6) s1_q3_7)) (<= (+ s2_q3_7 p7) s1_q3_7))) (and (and (and (>= b3_7 p8) (<= s2_q3_7 p9)) (<= (+ s1_q3_7 p10) s2_q3_7)) (<= (+ s0_q3_7 p11) s2_q3_7))))))

(declare-fun x0_6 () Real)
(declare-fun x1_6 () Real)
(declare-fun x2_6 () Real)
(declare-fun x3_6 () Real)
(declare-fun bi_6 () Real)
(declare-fun b0_6 () Real)
(declare-fun b1_6 () Real)
(declare-fun b2_6 () Real)
(declare-fun b3_6 () Real)
(declare-fun s0_qi_6 () Real)
(declare-fun s0_q0_6 () Real)
(declare-fun s0_q1_6 () Real)
(declare-fun s0_q2_6 () Real)
(declare-fun s0_q3_6 () Real)
(declare-fun s1_qi_6 () Real)
(declare-fun s1_q0_6 () Real)
(declare-fun s1_q1_6 () Real)
(declare-fun s1_q2_6 () Real)
(declare-fun s1_q3_6 () Real)
(declare-fun s2_qi_6 () Real)
(declare-fun s2_q0_6 () Real)
(declare-fun s2_q1_6 () Real)
(declare-fun s2_q2_6 () Real)
(declare-fun s2_q3_6 () Real)
(declare-fun t0_6 () Real)
(declare-fun t1_6 () Real)
(declare-fun t2_6 () Real)
(declare-fun t3_6 () Real)
(declare-fun bc_6 () Real)
(declare-fun s0_qc_6 () Real)
(declare-fun s1_qc_6 () Real)
(declare-fun s2_qc_6 () Real)
(assert (>= t0_6 0.0))
(assert (>= t1_6 0.0))
(assert (>= t2_6 0.0))
(assert (>= t3_6 0.0))
(assert (<= bi_6 100.0))
(assert (<= b0_6 100.0))
(assert (<= b1_6 100.0))
(assert (<= b2_6 100.0))
(assert (<= b3_6 100.0))
(assert (>= s0_qi_6 0.0))
(assert (>= s0_q0_6 0.0))
(assert (>= s0_q1_6 0.0))
(assert (>= s0_q2_6 0.0))
(assert (>= s0_q3_6 0.0))
(assert (>= s1_qi_6 0.0))
(assert (>= s1_q0_6 0.0))
(assert (>= s1_q1_6 0.0))
(assert (>= s1_q2_6 0.0))
(assert (>= s1_q3_6 0.0))
(assert (>= s2_qi_6 0.0))
(assert (>= s2_q0_6 0.0))
(assert (>= s2_q1_6 0.0))
(assert (>= s2_q2_6 0.0))
(assert (>= s2_q3_6 0.0))
(assert (<= s0_qi_6 100.0))
(assert (<= s1_qi_6 100.0))
(declare-fun choice_6 () Real)
(assert (or (= choice_6 0.0) (= choice_6 1.0) (= choice_6 2.0)))


;charging
(assert (= x0_6 0))
(assert (= b0_6 (+ bi_6 (* battery_charging_rate t0_6))))
(assert (= s0_q0_6 (+ s0_qi_6 (* queue_data_rate t0_6))))
(assert (= s1_q0_6 (+ s1_qi_6 (* queue_data_rate t0_6))))
(assert (= s2_q0_6 (+ s2_qi_6 (* queue_data_rate t0_6))))
(assert (and (=> (>= bi_6 p15) (= b0_6 bi_6)) (=> (< bi_6 p15) (= b0_6 p15))))
(assert (=> (and (and (and (>= bi_6 p0) (<= s0_qi_6 p1)) (<= (+ s1_qi_6 p2) s0_qi_6)) (<= (+ s2_qi_6 p3) s0_qi_6)) (= choice_6 0.0)))
(assert (=> (and (not (and (and (and (>= bi_6 p0) (<= s0_qi_6 p1)) (<= (+ s1_qi_6 p2) s0_qi_6)) (<= (+ s2_qi_6 p3) s0_qi_6))) (and (and (and (>= bi_6 p4) (<= s1_qi_6 p5)) (<= (+ s0_qi_6 p6) s1_qi_6)) (<= (+ s2_qi_6 p7) s1_qi_6))) (= choice_6 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_6 p0) (<= s0_qi_6 p1)) (<= (+ s1_qi_6 p2) s0_qi_6)) (<= (+ s2_qi_6 p3) s0_qi_6))) (not (and (and (and (>= bi_6 p4) (<= s1_qi_6 p5)) (<= (+ s0_qi_6 p6) s1_qi_6)) (<= (+ s2_qi_6 p7) s1_qi_6)))) (and (and (and (>= bi_6 p8) (<= s2_qi_6 p9)) (<= (+ s1_qi_6 p10) s2_qi_6)) (<= (+ s0_qi_6 p11) s2_qi_6))) (= choice_6 2.0)))


;flying to sensors
(assert (=> (= choice_6 0.0) (= x1_6 s0_loc)))
(assert (=> (= choice_6 1.0) (= x1_6 s1_loc)))
(assert (=> (= choice_6 2.0) (= x1_6 s2_loc)))
(assert (= x1_6 (+ x0_6 (* drone_velocity t1_6))))
(assert (= b1_6 (+ b0_6 (* battery_charge_rate_fly t1_6))))
(assert (= s0_q1_6 (+ s0_q0_6 (* queue_data_rate t1_6))))
(assert (= s1_q1_6 (+ s1_q0_6 (* queue_data_rate t1_6))))
(assert (= s2_q1_6 (+ s2_q0_6 (* queue_data_rate t1_6))))


;Collecting data
(assert (= x2_6 x1_6))
(assert (= b2_6 (+ b1_6 (* battery_charge_rate_hover t2_6))))
(assert (=> (= choice_6 0.0) (and (= s0_q2_6 (- s0_q1_6 (* queue_upload_rate t2_6))) (= s1_q2_6 (+ s1_q1_6 (* queue_data_rate t2_6))) (= s2_q2_6 (+ s2_q1_6 (* queue_data_rate t2_6))))))
(assert (=> (= choice_6 1.0) (and (= s1_q2_6 (- s1_q1_6 (* queue_upload_rate t2_6))) (= s0_q2_6 (+ s0_q1_6 (* queue_data_rate t2_6))) (= s2_q2_6 (+ s2_q1_6 (* queue_data_rate t2_6))))))
(assert (=> (= choice_6 2.0) (and (= s2_q2_6 (- s2_q1_6 (* queue_upload_rate t2_6))) (= s0_q2_6 (+ s0_q1_6 (* queue_data_rate t2_6))) (= s1_q2_6 (+ s1_q1_6 (* queue_data_rate t2_6))))))
(assert (=> (= choice_6 0.0) (and (=> (<= s0_q1_6 p12) (= s0_q2_6 s0_q1_6)) (=> (> s0_q1_6 p12) (= s0_q2_6 p12)))))
(assert (=> (= choice_6 1.0) (and (=> (<= s1_q1_6 p13) (= s1_q2_6 s1_q1_6)) (=> (> s1_q1_6 p13) (= s1_q2_6 p13)))))
(assert (=> (= choice_6 2.0) (and (=> (<= s2_q1_6 p14) (= s2_q2_6 s2_q1_6)) (=> (> s2_q1_6 p14) (= s2_q2_6 p14)))))


;flying back
(assert (= x3_6 0))
(assert (= x3_6 (+ x2_6 (- (* drone_velocity t3_6)))))
(assert (= b3_6 (+ b2_6 (* battery_charge_rate_fly t3_6))))
(assert (= s0_q3_6 (+ s0_q2_6 (* queue_data_rate t3_6))))
(assert (= s1_q3_6 (+ s1_q2_6 (* queue_data_rate t3_6))))
(assert (= s2_q3_6 (+ s2_q2_6 (* queue_data_rate t3_6))))

(assert (and (= bc_6 59.0) (= s0_qc_6 1.0) (= s1_qc_6 0.0) (= s2_qc_6 1.0)))

(assert (and (= bi_6 bc_6) (= s0_qi_6 s0_qc_6) (= s1_qi_6 s1_qc_6) (= s2_qi_6 s2_qc_6)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_6 p0) (<= s0_qi_6 p1)) (<= (+ s1_qi_6 p2) s0_qi_6)) (<= (+ s2_qi_6 p3) s0_qi_6)) (and (and (and (>= bi_6 p4) (<= s1_qi_6 p5)) (<= (+ s0_qi_6 p6) s1_qi_6)) (<= (+ s2_qi_6 p7) s1_qi_6))) (and (and (and (>= bi_6 p8) (<= s2_qi_6 p9)) (<= (+ s1_qi_6 p10) s2_qi_6)) (<= (+ s0_qi_6 p11) s2_qi_6)))(and (and (> b0_6 0.0) (> b1_6 0.0) (> b2_6 0.0) (> b3_6 0.0) (< s0_q0_6 100.0) (< s0_q1_6 100.0) (< s0_q2_6 100.0) (< s0_q3_6 100.0) (< s1_q0_6 100.0) (< s1_q1_6 100.0) (< s1_q2_6 100.0) (< s1_q3_6 100.0) (< s2_q0_6 100.0) (< s2_q1_6 100.0) (< s2_q2_6 100.0) (< s2_q3_6 100.0))(or (or (and (and (and (>= b3_6 p0) (<= s0_q3_6 p1)) (<= (+ s1_q3_6 p2) s0_q3_6)) (<= (+ s2_q3_6 p3) s0_q3_6)) (and (and (and (>= b3_6 p4) (<= s1_q3_6 p5)) (<= (+ s0_q3_6 p6) s1_q3_6)) (<= (+ s2_q3_6 p7) s1_q3_6))) (and (and (and (>= b3_6 p8) (<= s2_q3_6 p9)) (<= (+ s1_q3_6 p10) s2_q3_6)) (<= (+ s0_q3_6 p11) s2_q3_6))))))

(declare-fun x0_5 () Real)
(declare-fun x1_5 () Real)
(declare-fun x2_5 () Real)
(declare-fun x3_5 () Real)
(declare-fun bi_5 () Real)
(declare-fun b0_5 () Real)
(declare-fun b1_5 () Real)
(declare-fun b2_5 () Real)
(declare-fun b3_5 () Real)
(declare-fun s0_qi_5 () Real)
(declare-fun s0_q0_5 () Real)
(declare-fun s0_q1_5 () Real)
(declare-fun s0_q2_5 () Real)
(declare-fun s0_q3_5 () Real)
(declare-fun s1_qi_5 () Real)
(declare-fun s1_q0_5 () Real)
(declare-fun s1_q1_5 () Real)
(declare-fun s1_q2_5 () Real)
(declare-fun s1_q3_5 () Real)
(declare-fun s2_qi_5 () Real)
(declare-fun s2_q0_5 () Real)
(declare-fun s2_q1_5 () Real)
(declare-fun s2_q2_5 () Real)
(declare-fun s2_q3_5 () Real)
(declare-fun t0_5 () Real)
(declare-fun t1_5 () Real)
(declare-fun t2_5 () Real)
(declare-fun t3_5 () Real)
(declare-fun bc_5 () Real)
(declare-fun s0_qc_5 () Real)
(declare-fun s1_qc_5 () Real)
(declare-fun s2_qc_5 () Real)
(assert (>= t0_5 0.0))
(assert (>= t1_5 0.0))
(assert (>= t2_5 0.0))
(assert (>= t3_5 0.0))
(assert (<= bi_5 100.0))
(assert (<= b0_5 100.0))
(assert (<= b1_5 100.0))
(assert (<= b2_5 100.0))
(assert (<= b3_5 100.0))
(assert (>= s0_qi_5 0.0))
(assert (>= s0_q0_5 0.0))
(assert (>= s0_q1_5 0.0))
(assert (>= s0_q2_5 0.0))
(assert (>= s0_q3_5 0.0))
(assert (>= s1_qi_5 0.0))
(assert (>= s1_q0_5 0.0))
(assert (>= s1_q1_5 0.0))
(assert (>= s1_q2_5 0.0))
(assert (>= s1_q3_5 0.0))
(assert (>= s2_qi_5 0.0))
(assert (>= s2_q0_5 0.0))
(assert (>= s2_q1_5 0.0))
(assert (>= s2_q2_5 0.0))
(assert (>= s2_q3_5 0.0))
(assert (<= s0_qi_5 100.0))
(assert (<= s1_qi_5 100.0))
(declare-fun choice_5 () Real)
(assert (or (= choice_5 0.0) (= choice_5 1.0) (= choice_5 2.0)))


;charging
(assert (= x0_5 0))
(assert (= b0_5 (+ bi_5 (* battery_charging_rate t0_5))))
(assert (= s0_q0_5 (+ s0_qi_5 (* queue_data_rate t0_5))))
(assert (= s1_q0_5 (+ s1_qi_5 (* queue_data_rate t0_5))))
(assert (= s2_q0_5 (+ s2_qi_5 (* queue_data_rate t0_5))))
(assert (and (=> (>= bi_5 p15) (= b0_5 bi_5)) (=> (< bi_5 p15) (= b0_5 p15))))
(assert (=> (and (and (and (>= bi_5 p0) (<= s0_qi_5 p1)) (<= (+ s1_qi_5 p2) s0_qi_5)) (<= (+ s2_qi_5 p3) s0_qi_5)) (= choice_5 0.0)))
(assert (=> (and (not (and (and (and (>= bi_5 p0) (<= s0_qi_5 p1)) (<= (+ s1_qi_5 p2) s0_qi_5)) (<= (+ s2_qi_5 p3) s0_qi_5))) (and (and (and (>= bi_5 p4) (<= s1_qi_5 p5)) (<= (+ s0_qi_5 p6) s1_qi_5)) (<= (+ s2_qi_5 p7) s1_qi_5))) (= choice_5 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_5 p0) (<= s0_qi_5 p1)) (<= (+ s1_qi_5 p2) s0_qi_5)) (<= (+ s2_qi_5 p3) s0_qi_5))) (not (and (and (and (>= bi_5 p4) (<= s1_qi_5 p5)) (<= (+ s0_qi_5 p6) s1_qi_5)) (<= (+ s2_qi_5 p7) s1_qi_5)))) (and (and (and (>= bi_5 p8) (<= s2_qi_5 p9)) (<= (+ s1_qi_5 p10) s2_qi_5)) (<= (+ s0_qi_5 p11) s2_qi_5))) (= choice_5 2.0)))


;flying to sensors
(assert (=> (= choice_5 0.0) (= x1_5 s0_loc)))
(assert (=> (= choice_5 1.0) (= x1_5 s1_loc)))
(assert (=> (= choice_5 2.0) (= x1_5 s2_loc)))
(assert (= x1_5 (+ x0_5 (* drone_velocity t1_5))))
(assert (= b1_5 (+ b0_5 (* battery_charge_rate_fly t1_5))))
(assert (= s0_q1_5 (+ s0_q0_5 (* queue_data_rate t1_5))))
(assert (= s1_q1_5 (+ s1_q0_5 (* queue_data_rate t1_5))))
(assert (= s2_q1_5 (+ s2_q0_5 (* queue_data_rate t1_5))))


;Collecting data
(assert (= x2_5 x1_5))
(assert (= b2_5 (+ b1_5 (* battery_charge_rate_hover t2_5))))
(assert (=> (= choice_5 0.0) (and (= s0_q2_5 (- s0_q1_5 (* queue_upload_rate t2_5))) (= s1_q2_5 (+ s1_q1_5 (* queue_data_rate t2_5))) (= s2_q2_5 (+ s2_q1_5 (* queue_data_rate t2_5))))))
(assert (=> (= choice_5 1.0) (and (= s1_q2_5 (- s1_q1_5 (* queue_upload_rate t2_5))) (= s0_q2_5 (+ s0_q1_5 (* queue_data_rate t2_5))) (= s2_q2_5 (+ s2_q1_5 (* queue_data_rate t2_5))))))
(assert (=> (= choice_5 2.0) (and (= s2_q2_5 (- s2_q1_5 (* queue_upload_rate t2_5))) (= s0_q2_5 (+ s0_q1_5 (* queue_data_rate t2_5))) (= s1_q2_5 (+ s1_q1_5 (* queue_data_rate t2_5))))))
(assert (=> (= choice_5 0.0) (and (=> (<= s0_q1_5 p12) (= s0_q2_5 s0_q1_5)) (=> (> s0_q1_5 p12) (= s0_q2_5 p12)))))
(assert (=> (= choice_5 1.0) (and (=> (<= s1_q1_5 p13) (= s1_q2_5 s1_q1_5)) (=> (> s1_q1_5 p13) (= s1_q2_5 p13)))))
(assert (=> (= choice_5 2.0) (and (=> (<= s2_q1_5 p14) (= s2_q2_5 s2_q1_5)) (=> (> s2_q1_5 p14) (= s2_q2_5 p14)))))


;flying back
(assert (= x3_5 0))
(assert (= x3_5 (+ x2_5 (- (* drone_velocity t3_5)))))
(assert (= b3_5 (+ b2_5 (* battery_charge_rate_fly t3_5))))
(assert (= s0_q3_5 (+ s0_q2_5 (* queue_data_rate t3_5))))
(assert (= s1_q3_5 (+ s1_q2_5 (* queue_data_rate t3_5))))
(assert (= s2_q3_5 (+ s2_q2_5 (* queue_data_rate t3_5))))

(assert (and (= bc_5 99.625) (= s0_qc_5 0.0) (= s1_qc_5 0.0) (= s2_qc_5 0.0)))

(assert (and (= bi_5 bc_5) (= s0_qi_5 s0_qc_5) (= s1_qi_5 s1_qc_5) (= s2_qi_5 s2_qc_5)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_5 p0) (<= s0_qi_5 p1)) (<= (+ s1_qi_5 p2) s0_qi_5)) (<= (+ s2_qi_5 p3) s0_qi_5)) (and (and (and (>= bi_5 p4) (<= s1_qi_5 p5)) (<= (+ s0_qi_5 p6) s1_qi_5)) (<= (+ s2_qi_5 p7) s1_qi_5))) (and (and (and (>= bi_5 p8) (<= s2_qi_5 p9)) (<= (+ s1_qi_5 p10) s2_qi_5)) (<= (+ s0_qi_5 p11) s2_qi_5)))(and (and (> b0_5 0.0) (> b1_5 0.0) (> b2_5 0.0) (> b3_5 0.0) (< s0_q0_5 100.0) (< s0_q1_5 100.0) (< s0_q2_5 100.0) (< s0_q3_5 100.0) (< s1_q0_5 100.0) (< s1_q1_5 100.0) (< s1_q2_5 100.0) (< s1_q3_5 100.0) (< s2_q0_5 100.0) (< s2_q1_5 100.0) (< s2_q2_5 100.0) (< s2_q3_5 100.0))(or (or (and (and (and (>= b3_5 p0) (<= s0_q3_5 p1)) (<= (+ s1_q3_5 p2) s0_q3_5)) (<= (+ s2_q3_5 p3) s0_q3_5)) (and (and (and (>= b3_5 p4) (<= s1_q3_5 p5)) (<= (+ s0_q3_5 p6) s1_q3_5)) (<= (+ s2_q3_5 p7) s1_q3_5))) (and (and (and (>= b3_5 p8) (<= s2_q3_5 p9)) (<= (+ s1_q3_5 p10) s2_q3_5)) (<= (+ s0_q3_5 p11) s2_q3_5))))))

(declare-fun x0_4 () Real)
(declare-fun x1_4 () Real)
(declare-fun x2_4 () Real)
(declare-fun x3_4 () Real)
(declare-fun bi_4 () Real)
(declare-fun b0_4 () Real)
(declare-fun b1_4 () Real)
(declare-fun b2_4 () Real)
(declare-fun b3_4 () Real)
(declare-fun s0_qi_4 () Real)
(declare-fun s0_q0_4 () Real)
(declare-fun s0_q1_4 () Real)
(declare-fun s0_q2_4 () Real)
(declare-fun s0_q3_4 () Real)
(declare-fun s1_qi_4 () Real)
(declare-fun s1_q0_4 () Real)
(declare-fun s1_q1_4 () Real)
(declare-fun s1_q2_4 () Real)
(declare-fun s1_q3_4 () Real)
(declare-fun s2_qi_4 () Real)
(declare-fun s2_q0_4 () Real)
(declare-fun s2_q1_4 () Real)
(declare-fun s2_q2_4 () Real)
(declare-fun s2_q3_4 () Real)
(declare-fun t0_4 () Real)
(declare-fun t1_4 () Real)
(declare-fun t2_4 () Real)
(declare-fun t3_4 () Real)
(declare-fun bc_4 () Real)
(declare-fun s0_qc_4 () Real)
(declare-fun s1_qc_4 () Real)
(declare-fun s2_qc_4 () Real)
(assert (>= t0_4 0.0))
(assert (>= t1_4 0.0))
(assert (>= t2_4 0.0))
(assert (>= t3_4 0.0))
(assert (<= bi_4 100.0))
(assert (<= b0_4 100.0))
(assert (<= b1_4 100.0))
(assert (<= b2_4 100.0))
(assert (<= b3_4 100.0))
(assert (>= s0_qi_4 0.0))
(assert (>= s0_q0_4 0.0))
(assert (>= s0_q1_4 0.0))
(assert (>= s0_q2_4 0.0))
(assert (>= s0_q3_4 0.0))
(assert (>= s1_qi_4 0.0))
(assert (>= s1_q0_4 0.0))
(assert (>= s1_q1_4 0.0))
(assert (>= s1_q2_4 0.0))
(assert (>= s1_q3_4 0.0))
(assert (>= s2_qi_4 0.0))
(assert (>= s2_q0_4 0.0))
(assert (>= s2_q1_4 0.0))
(assert (>= s2_q2_4 0.0))
(assert (>= s2_q3_4 0.0))
(assert (<= s0_qi_4 100.0))
(assert (<= s1_qi_4 100.0))
(declare-fun choice_4 () Real)
(assert (or (= choice_4 0.0) (= choice_4 1.0) (= choice_4 2.0)))


;charging
(assert (= x0_4 0))
(assert (= b0_4 (+ bi_4 (* battery_charging_rate t0_4))))
(assert (= s0_q0_4 (+ s0_qi_4 (* queue_data_rate t0_4))))
(assert (= s1_q0_4 (+ s1_qi_4 (* queue_data_rate t0_4))))
(assert (= s2_q0_4 (+ s2_qi_4 (* queue_data_rate t0_4))))
(assert (and (=> (>= bi_4 p15) (= b0_4 bi_4)) (=> (< bi_4 p15) (= b0_4 p15))))
(assert (=> (and (and (and (>= bi_4 p0) (<= s0_qi_4 p1)) (<= (+ s1_qi_4 p2) s0_qi_4)) (<= (+ s2_qi_4 p3) s0_qi_4)) (= choice_4 0.0)))
(assert (=> (and (not (and (and (and (>= bi_4 p0) (<= s0_qi_4 p1)) (<= (+ s1_qi_4 p2) s0_qi_4)) (<= (+ s2_qi_4 p3) s0_qi_4))) (and (and (and (>= bi_4 p4) (<= s1_qi_4 p5)) (<= (+ s0_qi_4 p6) s1_qi_4)) (<= (+ s2_qi_4 p7) s1_qi_4))) (= choice_4 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_4 p0) (<= s0_qi_4 p1)) (<= (+ s1_qi_4 p2) s0_qi_4)) (<= (+ s2_qi_4 p3) s0_qi_4))) (not (and (and (and (>= bi_4 p4) (<= s1_qi_4 p5)) (<= (+ s0_qi_4 p6) s1_qi_4)) (<= (+ s2_qi_4 p7) s1_qi_4)))) (and (and (and (>= bi_4 p8) (<= s2_qi_4 p9)) (<= (+ s1_qi_4 p10) s2_qi_4)) (<= (+ s0_qi_4 p11) s2_qi_4))) (= choice_4 2.0)))


;flying to sensors
(assert (=> (= choice_4 0.0) (= x1_4 s0_loc)))
(assert (=> (= choice_4 1.0) (= x1_4 s1_loc)))
(assert (=> (= choice_4 2.0) (= x1_4 s2_loc)))
(assert (= x1_4 (+ x0_4 (* drone_velocity t1_4))))
(assert (= b1_4 (+ b0_4 (* battery_charge_rate_fly t1_4))))
(assert (= s0_q1_4 (+ s0_q0_4 (* queue_data_rate t1_4))))
(assert (= s1_q1_4 (+ s1_q0_4 (* queue_data_rate t1_4))))
(assert (= s2_q1_4 (+ s2_q0_4 (* queue_data_rate t1_4))))


;Collecting data
(assert (= x2_4 x1_4))
(assert (= b2_4 (+ b1_4 (* battery_charge_rate_hover t2_4))))
(assert (=> (= choice_4 0.0) (and (= s0_q2_4 (- s0_q1_4 (* queue_upload_rate t2_4))) (= s1_q2_4 (+ s1_q1_4 (* queue_data_rate t2_4))) (= s2_q2_4 (+ s2_q1_4 (* queue_data_rate t2_4))))))
(assert (=> (= choice_4 1.0) (and (= s1_q2_4 (- s1_q1_4 (* queue_upload_rate t2_4))) (= s0_q2_4 (+ s0_q1_4 (* queue_data_rate t2_4))) (= s2_q2_4 (+ s2_q1_4 (* queue_data_rate t2_4))))))
(assert (=> (= choice_4 2.0) (and (= s2_q2_4 (- s2_q1_4 (* queue_upload_rate t2_4))) (= s0_q2_4 (+ s0_q1_4 (* queue_data_rate t2_4))) (= s1_q2_4 (+ s1_q1_4 (* queue_data_rate t2_4))))))
(assert (=> (= choice_4 0.0) (and (=> (<= s0_q1_4 p12) (= s0_q2_4 s0_q1_4)) (=> (> s0_q1_4 p12) (= s0_q2_4 p12)))))
(assert (=> (= choice_4 1.0) (and (=> (<= s1_q1_4 p13) (= s1_q2_4 s1_q1_4)) (=> (> s1_q1_4 p13) (= s1_q2_4 p13)))))
(assert (=> (= choice_4 2.0) (and (=> (<= s2_q1_4 p14) (= s2_q2_4 s2_q1_4)) (=> (> s2_q1_4 p14) (= s2_q2_4 p14)))))


;flying back
(assert (= x3_4 0))
(assert (= x3_4 (+ x2_4 (- (* drone_velocity t3_4)))))
(assert (= b3_4 (+ b2_4 (* battery_charge_rate_fly t3_4))))
(assert (= s0_q3_4 (+ s0_q2_4 (* queue_data_rate t3_4))))
(assert (= s1_q3_4 (+ s1_q2_4 (* queue_data_rate t3_4))))
(assert (= s2_q3_4 (+ s2_q2_4 (* queue_data_rate t3_4))))

(assert (and (= bc_4 96.5) (= s0_qc_4 0.0) (= s1_qc_4 0.0) (= s2_qc_4 0.0)))

(assert (and (= bi_4 bc_4) (= s0_qi_4 s0_qc_4) (= s1_qi_4 s1_qc_4) (= s2_qi_4 s2_qc_4)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_4 p0) (<= s0_qi_4 p1)) (<= (+ s1_qi_4 p2) s0_qi_4)) (<= (+ s2_qi_4 p3) s0_qi_4)) (and (and (and (>= bi_4 p4) (<= s1_qi_4 p5)) (<= (+ s0_qi_4 p6) s1_qi_4)) (<= (+ s2_qi_4 p7) s1_qi_4))) (and (and (and (>= bi_4 p8) (<= s2_qi_4 p9)) (<= (+ s1_qi_4 p10) s2_qi_4)) (<= (+ s0_qi_4 p11) s2_qi_4)))(and (and (> b0_4 0.0) (> b1_4 0.0) (> b2_4 0.0) (> b3_4 0.0) (< s0_q0_4 100.0) (< s0_q1_4 100.0) (< s0_q2_4 100.0) (< s0_q3_4 100.0) (< s1_q0_4 100.0) (< s1_q1_4 100.0) (< s1_q2_4 100.0) (< s1_q3_4 100.0) (< s2_q0_4 100.0) (< s2_q1_4 100.0) (< s2_q2_4 100.0) (< s2_q3_4 100.0))(or (or (and (and (and (>= b3_4 p0) (<= s0_q3_4 p1)) (<= (+ s1_q3_4 p2) s0_q3_4)) (<= (+ s2_q3_4 p3) s0_q3_4)) (and (and (and (>= b3_4 p4) (<= s1_q3_4 p5)) (<= (+ s0_q3_4 p6) s1_q3_4)) (<= (+ s2_q3_4 p7) s1_q3_4))) (and (and (and (>= b3_4 p8) (<= s2_q3_4 p9)) (<= (+ s1_q3_4 p10) s2_q3_4)) (<= (+ s0_q3_4 p11) s2_q3_4))))))

(declare-fun x0_3 () Real)
(declare-fun x1_3 () Real)
(declare-fun x2_3 () Real)
(declare-fun x3_3 () Real)
(declare-fun bi_3 () Real)
(declare-fun b0_3 () Real)
(declare-fun b1_3 () Real)
(declare-fun b2_3 () Real)
(declare-fun b3_3 () Real)
(declare-fun s0_qi_3 () Real)
(declare-fun s0_q0_3 () Real)
(declare-fun s0_q1_3 () Real)
(declare-fun s0_q2_3 () Real)
(declare-fun s0_q3_3 () Real)
(declare-fun s1_qi_3 () Real)
(declare-fun s1_q0_3 () Real)
(declare-fun s1_q1_3 () Real)
(declare-fun s1_q2_3 () Real)
(declare-fun s1_q3_3 () Real)
(declare-fun s2_qi_3 () Real)
(declare-fun s2_q0_3 () Real)
(declare-fun s2_q1_3 () Real)
(declare-fun s2_q2_3 () Real)
(declare-fun s2_q3_3 () Real)
(declare-fun t0_3 () Real)
(declare-fun t1_3 () Real)
(declare-fun t2_3 () Real)
(declare-fun t3_3 () Real)
(declare-fun bc_3 () Real)
(declare-fun s0_qc_3 () Real)
(declare-fun s1_qc_3 () Real)
(declare-fun s2_qc_3 () Real)
(assert (>= t0_3 0.0))
(assert (>= t1_3 0.0))
(assert (>= t2_3 0.0))
(assert (>= t3_3 0.0))
(assert (<= bi_3 100.0))
(assert (<= b0_3 100.0))
(assert (<= b1_3 100.0))
(assert (<= b2_3 100.0))
(assert (<= b3_3 100.0))
(assert (>= s0_qi_3 0.0))
(assert (>= s0_q0_3 0.0))
(assert (>= s0_q1_3 0.0))
(assert (>= s0_q2_3 0.0))
(assert (>= s0_q3_3 0.0))
(assert (>= s1_qi_3 0.0))
(assert (>= s1_q0_3 0.0))
(assert (>= s1_q1_3 0.0))
(assert (>= s1_q2_3 0.0))
(assert (>= s1_q3_3 0.0))
(assert (>= s2_qi_3 0.0))
(assert (>= s2_q0_3 0.0))
(assert (>= s2_q1_3 0.0))
(assert (>= s2_q2_3 0.0))
(assert (>= s2_q3_3 0.0))
(assert (<= s0_qi_3 100.0))
(assert (<= s1_qi_3 100.0))
(declare-fun choice_3 () Real)
(assert (or (= choice_3 0.0) (= choice_3 1.0) (= choice_3 2.0)))


;charging
(assert (= x0_3 0))
(assert (= b0_3 (+ bi_3 (* battery_charging_rate t0_3))))
(assert (= s0_q0_3 (+ s0_qi_3 (* queue_data_rate t0_3))))
(assert (= s1_q0_3 (+ s1_qi_3 (* queue_data_rate t0_3))))
(assert (= s2_q0_3 (+ s2_qi_3 (* queue_data_rate t0_3))))
(assert (and (=> (>= bi_3 p15) (= b0_3 bi_3)) (=> (< bi_3 p15) (= b0_3 p15))))
(assert (=> (and (and (and (>= bi_3 p0) (<= s0_qi_3 p1)) (<= (+ s1_qi_3 p2) s0_qi_3)) (<= (+ s2_qi_3 p3) s0_qi_3)) (= choice_3 0.0)))
(assert (=> (and (not (and (and (and (>= bi_3 p0) (<= s0_qi_3 p1)) (<= (+ s1_qi_3 p2) s0_qi_3)) (<= (+ s2_qi_3 p3) s0_qi_3))) (and (and (and (>= bi_3 p4) (<= s1_qi_3 p5)) (<= (+ s0_qi_3 p6) s1_qi_3)) (<= (+ s2_qi_3 p7) s1_qi_3))) (= choice_3 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_3 p0) (<= s0_qi_3 p1)) (<= (+ s1_qi_3 p2) s0_qi_3)) (<= (+ s2_qi_3 p3) s0_qi_3))) (not (and (and (and (>= bi_3 p4) (<= s1_qi_3 p5)) (<= (+ s0_qi_3 p6) s1_qi_3)) (<= (+ s2_qi_3 p7) s1_qi_3)))) (and (and (and (>= bi_3 p8) (<= s2_qi_3 p9)) (<= (+ s1_qi_3 p10) s2_qi_3)) (<= (+ s0_qi_3 p11) s2_qi_3))) (= choice_3 2.0)))


;flying to sensors
(assert (=> (= choice_3 0.0) (= x1_3 s0_loc)))
(assert (=> (= choice_3 1.0) (= x1_3 s1_loc)))
(assert (=> (= choice_3 2.0) (= x1_3 s2_loc)))
(assert (= x1_3 (+ x0_3 (* drone_velocity t1_3))))
(assert (= b1_3 (+ b0_3 (* battery_charge_rate_fly t1_3))))
(assert (= s0_q1_3 (+ s0_q0_3 (* queue_data_rate t1_3))))
(assert (= s1_q1_3 (+ s1_q0_3 (* queue_data_rate t1_3))))
(assert (= s2_q1_3 (+ s2_q0_3 (* queue_data_rate t1_3))))


;Collecting data
(assert (= x2_3 x1_3))
(assert (= b2_3 (+ b1_3 (* battery_charge_rate_hover t2_3))))
(assert (=> (= choice_3 0.0) (and (= s0_q2_3 (- s0_q1_3 (* queue_upload_rate t2_3))) (= s1_q2_3 (+ s1_q1_3 (* queue_data_rate t2_3))) (= s2_q2_3 (+ s2_q1_3 (* queue_data_rate t2_3))))))
(assert (=> (= choice_3 1.0) (and (= s1_q2_3 (- s1_q1_3 (* queue_upload_rate t2_3))) (= s0_q2_3 (+ s0_q1_3 (* queue_data_rate t2_3))) (= s2_q2_3 (+ s2_q1_3 (* queue_data_rate t2_3))))))
(assert (=> (= choice_3 2.0) (and (= s2_q2_3 (- s2_q1_3 (* queue_upload_rate t2_3))) (= s0_q2_3 (+ s0_q1_3 (* queue_data_rate t2_3))) (= s1_q2_3 (+ s1_q1_3 (* queue_data_rate t2_3))))))
(assert (=> (= choice_3 0.0) (and (=> (<= s0_q1_3 p12) (= s0_q2_3 s0_q1_3)) (=> (> s0_q1_3 p12) (= s0_q2_3 p12)))))
(assert (=> (= choice_3 1.0) (and (=> (<= s1_q1_3 p13) (= s1_q2_3 s1_q1_3)) (=> (> s1_q1_3 p13) (= s1_q2_3 p13)))))
(assert (=> (= choice_3 2.0) (and (=> (<= s2_q1_3 p14) (= s2_q2_3 s2_q1_3)) (=> (> s2_q1_3 p14) (= s2_q2_3 p14)))))


;flying back
(assert (= x3_3 0))
(assert (= x3_3 (+ x2_3 (- (* drone_velocity t3_3)))))
(assert (= b3_3 (+ b2_3 (* battery_charge_rate_fly t3_3))))
(assert (= s0_q3_3 (+ s0_q2_3 (* queue_data_rate t3_3))))
(assert (= s1_q3_3 (+ s1_q2_3 (* queue_data_rate t3_3))))
(assert (= s2_q3_3 (+ s2_q2_3 (* queue_data_rate t3_3))))

(assert (and (= bc_3 84.0) (= s0_qc_3 0.0) (= s1_qc_3 0.0) (= s2_qc_3 0.0)))

(assert (and (= bi_3 bc_3) (= s0_qi_3 s0_qc_3) (= s1_qi_3 s1_qc_3) (= s2_qi_3 s2_qc_3)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_3 p0) (<= s0_qi_3 p1)) (<= (+ s1_qi_3 p2) s0_qi_3)) (<= (+ s2_qi_3 p3) s0_qi_3)) (and (and (and (>= bi_3 p4) (<= s1_qi_3 p5)) (<= (+ s0_qi_3 p6) s1_qi_3)) (<= (+ s2_qi_3 p7) s1_qi_3))) (and (and (and (>= bi_3 p8) (<= s2_qi_3 p9)) (<= (+ s1_qi_3 p10) s2_qi_3)) (<= (+ s0_qi_3 p11) s2_qi_3)))(and (and (> b0_3 0.0) (> b1_3 0.0) (> b2_3 0.0) (> b3_3 0.0) (< s0_q0_3 100.0) (< s0_q1_3 100.0) (< s0_q2_3 100.0) (< s0_q3_3 100.0) (< s1_q0_3 100.0) (< s1_q1_3 100.0) (< s1_q2_3 100.0) (< s1_q3_3 100.0) (< s2_q0_3 100.0) (< s2_q1_3 100.0) (< s2_q2_3 100.0) (< s2_q3_3 100.0))(or (or (and (and (and (>= b3_3 p0) (<= s0_q3_3 p1)) (<= (+ s1_q3_3 p2) s0_q3_3)) (<= (+ s2_q3_3 p3) s0_q3_3)) (and (and (and (>= b3_3 p4) (<= s1_q3_3 p5)) (<= (+ s0_q3_3 p6) s1_q3_3)) (<= (+ s2_q3_3 p7) s1_q3_3))) (and (and (and (>= b3_3 p8) (<= s2_q3_3 p9)) (<= (+ s1_q3_3 p10) s2_q3_3)) (<= (+ s0_q3_3 p11) s2_q3_3))))))

(declare-fun x0_2 () Real)
(declare-fun x1_2 () Real)
(declare-fun x2_2 () Real)
(declare-fun x3_2 () Real)
(declare-fun bi_2 () Real)
(declare-fun b0_2 () Real)
(declare-fun b1_2 () Real)
(declare-fun b2_2 () Real)
(declare-fun b3_2 () Real)
(declare-fun s0_qi_2 () Real)
(declare-fun s0_q0_2 () Real)
(declare-fun s0_q1_2 () Real)
(declare-fun s0_q2_2 () Real)
(declare-fun s0_q3_2 () Real)
(declare-fun s1_qi_2 () Real)
(declare-fun s1_q0_2 () Real)
(declare-fun s1_q1_2 () Real)
(declare-fun s1_q2_2 () Real)
(declare-fun s1_q3_2 () Real)
(declare-fun s2_qi_2 () Real)
(declare-fun s2_q0_2 () Real)
(declare-fun s2_q1_2 () Real)
(declare-fun s2_q2_2 () Real)
(declare-fun s2_q3_2 () Real)
(declare-fun t0_2 () Real)
(declare-fun t1_2 () Real)
(declare-fun t2_2 () Real)
(declare-fun t3_2 () Real)
(declare-fun bc_2 () Real)
(declare-fun s0_qc_2 () Real)
(declare-fun s1_qc_2 () Real)
(declare-fun s2_qc_2 () Real)
(assert (>= t0_2 0.0))
(assert (>= t1_2 0.0))
(assert (>= t2_2 0.0))
(assert (>= t3_2 0.0))
(assert (<= bi_2 100.0))
(assert (<= b0_2 100.0))
(assert (<= b1_2 100.0))
(assert (<= b2_2 100.0))
(assert (<= b3_2 100.0))
(assert (>= s0_qi_2 0.0))
(assert (>= s0_q0_2 0.0))
(assert (>= s0_q1_2 0.0))
(assert (>= s0_q2_2 0.0))
(assert (>= s0_q3_2 0.0))
(assert (>= s1_qi_2 0.0))
(assert (>= s1_q0_2 0.0))
(assert (>= s1_q1_2 0.0))
(assert (>= s1_q2_2 0.0))
(assert (>= s1_q3_2 0.0))
(assert (>= s2_qi_2 0.0))
(assert (>= s2_q0_2 0.0))
(assert (>= s2_q1_2 0.0))
(assert (>= s2_q2_2 0.0))
(assert (>= s2_q3_2 0.0))
(assert (<= s0_qi_2 100.0))
(assert (<= s1_qi_2 100.0))
(declare-fun choice_2 () Real)
(assert (or (= choice_2 0.0) (= choice_2 1.0) (= choice_2 2.0)))


;charging
(assert (= x0_2 0))
(assert (= b0_2 (+ bi_2 (* battery_charging_rate t0_2))))
(assert (= s0_q0_2 (+ s0_qi_2 (* queue_data_rate t0_2))))
(assert (= s1_q0_2 (+ s1_qi_2 (* queue_data_rate t0_2))))
(assert (= s2_q0_2 (+ s2_qi_2 (* queue_data_rate t0_2))))
(assert (and (=> (>= bi_2 p15) (= b0_2 bi_2)) (=> (< bi_2 p15) (= b0_2 p15))))
(assert (=> (and (and (and (>= bi_2 p0) (<= s0_qi_2 p1)) (<= (+ s1_qi_2 p2) s0_qi_2)) (<= (+ s2_qi_2 p3) s0_qi_2)) (= choice_2 0.0)))
(assert (=> (and (not (and (and (and (>= bi_2 p0) (<= s0_qi_2 p1)) (<= (+ s1_qi_2 p2) s0_qi_2)) (<= (+ s2_qi_2 p3) s0_qi_2))) (and (and (and (>= bi_2 p4) (<= s1_qi_2 p5)) (<= (+ s0_qi_2 p6) s1_qi_2)) (<= (+ s2_qi_2 p7) s1_qi_2))) (= choice_2 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_2 p0) (<= s0_qi_2 p1)) (<= (+ s1_qi_2 p2) s0_qi_2)) (<= (+ s2_qi_2 p3) s0_qi_2))) (not (and (and (and (>= bi_2 p4) (<= s1_qi_2 p5)) (<= (+ s0_qi_2 p6) s1_qi_2)) (<= (+ s2_qi_2 p7) s1_qi_2)))) (and (and (and (>= bi_2 p8) (<= s2_qi_2 p9)) (<= (+ s1_qi_2 p10) s2_qi_2)) (<= (+ s0_qi_2 p11) s2_qi_2))) (= choice_2 2.0)))


;flying to sensors
(assert (=> (= choice_2 0.0) (= x1_2 s0_loc)))
(assert (=> (= choice_2 1.0) (= x1_2 s1_loc)))
(assert (=> (= choice_2 2.0) (= x1_2 s2_loc)))
(assert (= x1_2 (+ x0_2 (* drone_velocity t1_2))))
(assert (= b1_2 (+ b0_2 (* battery_charge_rate_fly t1_2))))
(assert (= s0_q1_2 (+ s0_q0_2 (* queue_data_rate t1_2))))
(assert (= s1_q1_2 (+ s1_q0_2 (* queue_data_rate t1_2))))
(assert (= s2_q1_2 (+ s2_q0_2 (* queue_data_rate t1_2))))


;Collecting data
(assert (= x2_2 x1_2))
(assert (= b2_2 (+ b1_2 (* battery_charge_rate_hover t2_2))))
(assert (=> (= choice_2 0.0) (and (= s0_q2_2 (- s0_q1_2 (* queue_upload_rate t2_2))) (= s1_q2_2 (+ s1_q1_2 (* queue_data_rate t2_2))) (= s2_q2_2 (+ s2_q1_2 (* queue_data_rate t2_2))))))
(assert (=> (= choice_2 1.0) (and (= s1_q2_2 (- s1_q1_2 (* queue_upload_rate t2_2))) (= s0_q2_2 (+ s0_q1_2 (* queue_data_rate t2_2))) (= s2_q2_2 (+ s2_q1_2 (* queue_data_rate t2_2))))))
(assert (=> (= choice_2 2.0) (and (= s2_q2_2 (- s2_q1_2 (* queue_upload_rate t2_2))) (= s0_q2_2 (+ s0_q1_2 (* queue_data_rate t2_2))) (= s1_q2_2 (+ s1_q1_2 (* queue_data_rate t2_2))))))
(assert (=> (= choice_2 0.0) (and (=> (<= s0_q1_2 p12) (= s0_q2_2 s0_q1_2)) (=> (> s0_q1_2 p12) (= s0_q2_2 p12)))))
(assert (=> (= choice_2 1.0) (and (=> (<= s1_q1_2 p13) (= s1_q2_2 s1_q1_2)) (=> (> s1_q1_2 p13) (= s1_q2_2 p13)))))
(assert (=> (= choice_2 2.0) (and (=> (<= s2_q1_2 p14) (= s2_q2_2 s2_q1_2)) (=> (> s2_q1_2 p14) (= s2_q2_2 p14)))))


;flying back
(assert (= x3_2 0))
(assert (= x3_2 (+ x2_2 (- (* drone_velocity t3_2)))))
(assert (= b3_2 (+ b2_2 (* battery_charge_rate_fly t3_2))))
(assert (= s0_q3_2 (+ s0_q2_2 (* queue_data_rate t3_2))))
(assert (= s1_q3_2 (+ s1_q2_2 (* queue_data_rate t3_2))))
(assert (= s2_q3_2 (+ s2_q2_2 (* queue_data_rate t3_2))))

(assert (and (= bc_2 59.0) (= s0_qc_2 0.0) (= s1_qc_2 0.0) (= s2_qc_2 0.0)))

(assert (and (= bi_2 bc_2) (= s0_qi_2 s0_qc_2) (= s1_qi_2 s1_qc_2) (= s2_qi_2 s2_qc_2)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_2 p0) (<= s0_qi_2 p1)) (<= (+ s1_qi_2 p2) s0_qi_2)) (<= (+ s2_qi_2 p3) s0_qi_2)) (and (and (and (>= bi_2 p4) (<= s1_qi_2 p5)) (<= (+ s0_qi_2 p6) s1_qi_2)) (<= (+ s2_qi_2 p7) s1_qi_2))) (and (and (and (>= bi_2 p8) (<= s2_qi_2 p9)) (<= (+ s1_qi_2 p10) s2_qi_2)) (<= (+ s0_qi_2 p11) s2_qi_2)))(and (and (> b0_2 0.0) (> b1_2 0.0) (> b2_2 0.0) (> b3_2 0.0) (< s0_q0_2 100.0) (< s0_q1_2 100.0) (< s0_q2_2 100.0) (< s0_q3_2 100.0) (< s1_q0_2 100.0) (< s1_q1_2 100.0) (< s1_q2_2 100.0) (< s1_q3_2 100.0) (< s2_q0_2 100.0) (< s2_q1_2 100.0) (< s2_q2_2 100.0) (< s2_q3_2 100.0))(or (or (and (and (and (>= b3_2 p0) (<= s0_q3_2 p1)) (<= (+ s1_q3_2 p2) s0_q3_2)) (<= (+ s2_q3_2 p3) s0_q3_2)) (and (and (and (>= b3_2 p4) (<= s1_q3_2 p5)) (<= (+ s0_q3_2 p6) s1_q3_2)) (<= (+ s2_q3_2 p7) s1_q3_2))) (and (and (and (>= b3_2 p8) (<= s2_q3_2 p9)) (<= (+ s1_q3_2 p10) s2_q3_2)) (<= (+ s0_q3_2 p11) s2_q3_2))))))

(declare-fun x0_1 () Real)
(declare-fun x1_1 () Real)
(declare-fun x2_1 () Real)
(declare-fun x3_1 () Real)
(declare-fun bi_1 () Real)
(declare-fun b0_1 () Real)
(declare-fun b1_1 () Real)
(declare-fun b2_1 () Real)
(declare-fun b3_1 () Real)
(declare-fun s0_qi_1 () Real)
(declare-fun s0_q0_1 () Real)
(declare-fun s0_q1_1 () Real)
(declare-fun s0_q2_1 () Real)
(declare-fun s0_q3_1 () Real)
(declare-fun s1_qi_1 () Real)
(declare-fun s1_q0_1 () Real)
(declare-fun s1_q1_1 () Real)
(declare-fun s1_q2_1 () Real)
(declare-fun s1_q3_1 () Real)
(declare-fun s2_qi_1 () Real)
(declare-fun s2_q0_1 () Real)
(declare-fun s2_q1_1 () Real)
(declare-fun s2_q2_1 () Real)
(declare-fun s2_q3_1 () Real)
(declare-fun t0_1 () Real)
(declare-fun t1_1 () Real)
(declare-fun t2_1 () Real)
(declare-fun t3_1 () Real)
(declare-fun bc_1 () Real)
(declare-fun s0_qc_1 () Real)
(declare-fun s1_qc_1 () Real)
(declare-fun s2_qc_1 () Real)
(assert (>= t0_1 0.0))
(assert (>= t1_1 0.0))
(assert (>= t2_1 0.0))
(assert (>= t3_1 0.0))
(assert (<= bi_1 100.0))
(assert (<= b0_1 100.0))
(assert (<= b1_1 100.0))
(assert (<= b2_1 100.0))
(assert (<= b3_1 100.0))
(assert (>= s0_qi_1 0.0))
(assert (>= s0_q0_1 0.0))
(assert (>= s0_q1_1 0.0))
(assert (>= s0_q2_1 0.0))
(assert (>= s0_q3_1 0.0))
(assert (>= s1_qi_1 0.0))
(assert (>= s1_q0_1 0.0))
(assert (>= s1_q1_1 0.0))
(assert (>= s1_q2_1 0.0))
(assert (>= s1_q3_1 0.0))
(assert (>= s2_qi_1 0.0))
(assert (>= s2_q0_1 0.0))
(assert (>= s2_q1_1 0.0))
(assert (>= s2_q2_1 0.0))
(assert (>= s2_q3_1 0.0))
(assert (<= s0_qi_1 100.0))
(assert (<= s1_qi_1 100.0))
(declare-fun choice_1 () Real)
(assert (or (= choice_1 0.0) (= choice_1 1.0) (= choice_1 2.0)))


;charging
(assert (= x0_1 0))
(assert (= b0_1 (+ bi_1 (* battery_charging_rate t0_1))))
(assert (= s0_q0_1 (+ s0_qi_1 (* queue_data_rate t0_1))))
(assert (= s1_q0_1 (+ s1_qi_1 (* queue_data_rate t0_1))))
(assert (= s2_q0_1 (+ s2_qi_1 (* queue_data_rate t0_1))))
(assert (and (=> (>= bi_1 p15) (= b0_1 bi_1)) (=> (< bi_1 p15) (= b0_1 p15))))
(assert (=> (and (and (and (>= bi_1 p0) (<= s0_qi_1 p1)) (<= (+ s1_qi_1 p2) s0_qi_1)) (<= (+ s2_qi_1 p3) s0_qi_1)) (= choice_1 0.0)))
(assert (=> (and (not (and (and (and (>= bi_1 p0) (<= s0_qi_1 p1)) (<= (+ s1_qi_1 p2) s0_qi_1)) (<= (+ s2_qi_1 p3) s0_qi_1))) (and (and (and (>= bi_1 p4) (<= s1_qi_1 p5)) (<= (+ s0_qi_1 p6) s1_qi_1)) (<= (+ s2_qi_1 p7) s1_qi_1))) (= choice_1 1.0)))
(assert (=> (and (and (not (and (and (and (>= bi_1 p0) (<= s0_qi_1 p1)) (<= (+ s1_qi_1 p2) s0_qi_1)) (<= (+ s2_qi_1 p3) s0_qi_1))) (not (and (and (and (>= bi_1 p4) (<= s1_qi_1 p5)) (<= (+ s0_qi_1 p6) s1_qi_1)) (<= (+ s2_qi_1 p7) s1_qi_1)))) (and (and (and (>= bi_1 p8) (<= s2_qi_1 p9)) (<= (+ s1_qi_1 p10) s2_qi_1)) (<= (+ s0_qi_1 p11) s2_qi_1))) (= choice_1 2.0)))


;flying to sensors
(assert (=> (= choice_1 0.0) (= x1_1 s0_loc)))
(assert (=> (= choice_1 1.0) (= x1_1 s1_loc)))
(assert (=> (= choice_1 2.0) (= x1_1 s2_loc)))
(assert (= x1_1 (+ x0_1 (* drone_velocity t1_1))))
(assert (= b1_1 (+ b0_1 (* battery_charge_rate_fly t1_1))))
(assert (= s0_q1_1 (+ s0_q0_1 (* queue_data_rate t1_1))))
(assert (= s1_q1_1 (+ s1_q0_1 (* queue_data_rate t1_1))))
(assert (= s2_q1_1 (+ s2_q0_1 (* queue_data_rate t1_1))))


;Collecting data
(assert (= x2_1 x1_1))
(assert (= b2_1 (+ b1_1 (* battery_charge_rate_hover t2_1))))
(assert (=> (= choice_1 0.0) (and (= s0_q2_1 (- s0_q1_1 (* queue_upload_rate t2_1))) (= s1_q2_1 (+ s1_q1_1 (* queue_data_rate t2_1))) (= s2_q2_1 (+ s2_q1_1 (* queue_data_rate t2_1))))))
(assert (=> (= choice_1 1.0) (and (= s1_q2_1 (- s1_q1_1 (* queue_upload_rate t2_1))) (= s0_q2_1 (+ s0_q1_1 (* queue_data_rate t2_1))) (= s2_q2_1 (+ s2_q1_1 (* queue_data_rate t2_1))))))
(assert (=> (= choice_1 2.0) (and (= s2_q2_1 (- s2_q1_1 (* queue_upload_rate t2_1))) (= s0_q2_1 (+ s0_q1_1 (* queue_data_rate t2_1))) (= s1_q2_1 (+ s1_q1_1 (* queue_data_rate t2_1))))))
(assert (=> (= choice_1 0.0) (and (=> (<= s0_q1_1 p12) (= s0_q2_1 s0_q1_1)) (=> (> s0_q1_1 p12) (= s0_q2_1 p12)))))
(assert (=> (= choice_1 1.0) (and (=> (<= s1_q1_1 p13) (= s1_q2_1 s1_q1_1)) (=> (> s1_q1_1 p13) (= s1_q2_1 p13)))))
(assert (=> (= choice_1 2.0) (and (=> (<= s2_q1_1 p14) (= s2_q2_1 s2_q1_1)) (=> (> s2_q1_1 p14) (= s2_q2_1 p14)))))


;flying back
(assert (= x3_1 0))
(assert (= x3_1 (+ x2_1 (- (* drone_velocity t3_1)))))
(assert (= b3_1 (+ b2_1 (* battery_charge_rate_fly t3_1))))
(assert (= s0_q3_1 (+ s0_q2_1 (* queue_data_rate t3_1))))
(assert (= s1_q3_1 (+ s1_q2_1 (* queue_data_rate t3_1))))
(assert (= s2_q3_1 (+ s2_q2_1 (* queue_data_rate t3_1))))

(assert (and (= bc_1 9.0) (= s0_qc_1 0.0) (= s1_qc_1 0.0) (= s2_qc_1 9.0)))

(assert (and (= bi_1 bc_1) (= s0_qi_1 s0_qc_1) (= s1_qi_1 s1_qc_1) (= s2_qi_1 s2_qc_1)))


;Goal
(assert (=>(or (or (and (and (and (>= bi_1 p0) (<= s0_qi_1 p1)) (<= (+ s1_qi_1 p2) s0_qi_1)) (<= (+ s2_qi_1 p3) s0_qi_1)) (and (and (and (>= bi_1 p4) (<= s1_qi_1 p5)) (<= (+ s0_qi_1 p6) s1_qi_1)) (<= (+ s2_qi_1 p7) s1_qi_1))) (and (and (and (>= bi_1 p8) (<= s2_qi_1 p9)) (<= (+ s1_qi_1 p10) s2_qi_1)) (<= (+ s0_qi_1 p11) s2_qi_1)))(and (and (> b0_1 0.0) (> b1_1 0.0) (> b2_1 0.0) (> b3_1 0.0) (< s0_q0_1 100.0) (< s0_q1_1 100.0) (< s0_q2_1 100.0) (< s0_q3_1 100.0) (< s1_q0_1 100.0) (< s1_q1_1 100.0) (< s1_q2_1 100.0) (< s1_q3_1 100.0) (< s2_q0_1 100.0) (< s2_q1_1 100.0) (< s2_q2_1 100.0) (< s2_q3_1 100.0))(or (or (and (and (and (>= b3_1 p0) (<= s0_q3_1 p1)) (<= (+ s1_q3_1 p2) s0_q3_1)) (<= (+ s2_q3_1 p3) s0_q3_1)) (and (and (and (>= b3_1 p4) (<= s1_q3_1 p5)) (<= (+ s0_q3_1 p6) s1_q3_1)) (<= (+ s2_q3_1 p7) s1_q3_1))) (and (and (and (>= b3_1 p8) (<= s2_q3_1 p9)) (<= (+ s1_q3_1 p10) s2_q3_1)) (<= (+ s0_q3_1 p11) s2_q3_1))))))



(check-sat)
(get-value (p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15))
(exit)
